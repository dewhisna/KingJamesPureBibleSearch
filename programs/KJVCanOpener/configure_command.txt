Command-Lines for configuring Qt Build for KingJamesPureBibleSearch
===================================================================


Qt 4.8.4
========

Old Local Build:
./configure -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.4-dist


LSB x32 (old):
./configure -platform linux-lsb-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.4-lsb

*******************************************************************************

Linux LSB Build:
----------------

LSB x32:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON LINUX-32
../4.8.4-src-patched/configure -platform linux-lsb-g++-32 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.4-32-lsb

LSB x64:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON LINUX-64
../4.8.4-src-patched/configure -platform linux-lsb-g++-64 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.4-64-lsb

*******************************************************************************


----------------------------------------------------


Linux LOCAL BUILD (x64 release):
../4.8.4-src/configure -platform linux-g++-64 -developer-build -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-4.8.4-64-local


----------------------------------------------------


MAC Cocoa:
----------

../4.8.4-src/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -universal -arch x86 -arch ppc -arch x86_64 -arch ppc64 -prefix /Users/dewhisna/Qt/4.8.4-cocoa-run

*******************************************************************************

Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../4.8.4-src/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.4-cocoa-static-run

Cocoa x86/x64 Dynamic:   <<<< This was the development build for Mac
../4.8.4-src/configure -platform macx-g++ -opensource -release -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.4-cocoa-run

*******************************************************************************

These never worked for me because Apple has apparently dropped PPC support on
newer platforms and so I don't have a PPC compiler.  Here for reference in case
someone loans me an old Mac and there is sufficient requests for an old version:

Cocoa x86/x64/PPC (universal):
../4.8.4-src/configure -platform macx-llvm -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -universal -arch x86 -arch ppc -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.4-cocoa-static-univ-run


Carbon x86/PPC (universal):
../4.8.4-src/configure -platform macx-llvm -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -carbon -universal -arch x86 -arch ppc -prefix /Users/dewhisna/Qt/4.8.4-carbon-static-univ-run


Mac Cross-Compile on Linux Attempt:
-----------------------------------

export QMAKE_MAC_SDK=/usr/lib/apple/SDKs/MacOSX10.6.sdk/

../4.8.4-src/configure -xplatform macx-g++ -device-option CROSS_COMPILE=i686-apple-darwin10- -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch ppc -arch x86_64 -prefix /home/dewhisna/Qt/4.8.4-cocoa-static-univ-run


===============================================================================
===============================================================================


Qt 4.8.4 -- Win32 Cross-Compile
===============================

Built with:  sezero_4.5_20111101 build w/rev.5747 update from here:
http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/

configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32-
Needs -no-ssse3 to fix issue in src/gui/image/qjpeghandler.cpp:813: undefined reference to `__imp___Z32qt_convert_rgb888_to_rgb32_ssse3PjPKhi'

../4.8.4-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -debug-and-release -no-ssse3 -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /home/dewhisna/Qt/4.8.4-win32 -confirm-license 


===============================================================================
===============================================================================


Qt 4.8.5
========

Linux
-----
Linux LOCAL BUILD (x64 release):
../4.8.5-src/configure -platform linux-g++-64 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-4.8.5-64-local -confirm-license


Linux LSB Build:
----------------

LSB x32:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON LINUX-32
../4.8.5-src-lsb-patched/configure -platform linux-lsb-g++-32 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.5-32-lsb -confirm-license

LSB x64:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON LINUX-64
../4.8.5-src-lsb-patched/configure -platform linux-lsb-g++-64 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /usr/local/Trolltech/Qt-4.8.5-64-lsb -confirm-license


----------------------------------------------------

Mac Cocoa
---------
Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../4.8.5-src/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.5-cocoa-static-run -confirm-license


Mac Cocoa (Patched)
-------------------
Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../4.8.5-src-patched/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.5-patched-cocoa-static-run -confirm-license



Mac Cocoa (Patched) Universal x86, x86_64, PPC, PPC64
-----------------------------------------------------
../4.8.5-src-patched/configure -platform macx-g++ -opensource -release -static -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.5.sdk -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -universal -arch x86 -arch ppc -arch x86_64 -arch ppc64 -prefix /Users/dewhisna/Qt/4.8.5-patched-univ-static-run
(Good try, but doesn't work saying it doesn't understand the "triple" from the PPC target)


----------------------------------------------------

Windows (native)
----------------
- Built in-place rather than as shadow-build:
For MinGW, download the mingw-builds-install.exe and use: x32-4.8.1-posix-dwarf-rev5
Install MinGW to the Program Files (x86) folder, as default, and add C:\MinGW junction to locate it, so it can co-exist with other builds.
Configure Qt like so:
configure -platform win32-g++ -opensource -debug-and-release -qt-style-plastique -qt-style-windows -qt-style-windowsxp -qt-style-windowsvista -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -nomake tools -nomake examples -nomake demos -confirm-license 

----------------------------------------------------

Qt 4.8.5 -- Win32 Cross-Compile
-------------------------------

Built with:   i686-w64-mingw32-gcc-4.7.4-release-linux64_rubenvb.tar.xz from:
https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/rubenvb/gcc-4.7-release/

../4.8.5-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -debug-and-release -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /home/dewhisna/Qt/4.8.5-win32 -confirm-license 

Add this:
no-pkg-config


Qt 4.8.5 -- Win32 Cross-Compile [Kubuntu Packaged MinGW]
--------------------------------------------------------

Built with: Kubuntu cross-compile package for MinGW: mingw-w64, g++-mingw-w64, gcc-mingw-w64, gcc-mingw-w64-base, mingw-w64-i686-dev, mingw-w64-x86-64-dev, g++-mingw-w64-i686, gcc-mingw-w64-i686, g++-mingw-w64-x86-64, gcc-mingw-w64-x86-64, mingw-w64-common, binutils-mingw-w64, binutils-mingw-w64-i686, binutils-mingw-w64-x86-64, mingw-w64-tools, mingw32-binutils, mingw32, mingw32-runtime

../4.8.5-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -debug-and-release -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /home/dewhisna/Qt/4.8.5-win32-kubuntu -confirm-license 

Need to copy:
/usr/lib/gcc/i686-w64-mingw32/4.8/libstdc++-6.dll
/usr/lib/gcc/i686-w64-mingw32/4.8/libgcc_s_sjlj-1.dll
/usr/i686-w64-mingw32/lib/libwinpthread-1.dll

Make with:  make -j 32

Add this:
no-pkg-config


Qt 4.8.5 -- Win32 Cross-Compile [sezero Packaged MinGW]
-------------------------------------------------------

Built with:   mingw-w32-bin_x86_64-linux_20111101_sezero.tar.gz from:
https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/sezero_4.5_20111101/

cd /opt
sudo tar -zxvf mingw-w32-bin_x86_64-linux_20111101_sezero.tar.gz
(automatically makes cross_win32 link)
export PATH=/opt/cross_win32/bin:$PATH

These older packages are needed in addition to the Kubuntu 14.04 packages:
sudo dpkg -i libgmp3c2_4.3.2+dfsg-1ubuntu1_amd64.deb libmpc2_0.9-4_amd64.deb libmpfr1ldbl_2.4.2-3ubuntu1_amd64.deb

../4.8.5-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -debug-and-release -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /home/dewhisna/Qt/4.8.5-win32-sezero -confirm-license 

Need to copy:
/opt/W32_180676/bin/libstdc++-6.dll
/opt/W32_180676/bin/libgcc_s_sjlj-1.dll

Make with:  make -j 32
Still need: make install (even though it's the build folder, so headers get copied)
Still need to copy required source dependencies as described below...

Add this:
no-pkg-config

For some reason, even though this is supposedly SJLJ, it's still very fast, at least for Qt 4 (can't be used to build Qt 5)


Qt 4.8.5 -- Win32 Cross-Compile [sezero Packaged MinGW, No Exceptions]
----------------------------------------------------------------------

Built with:   mingw-w32-bin_x86_64-linux_20111101_sezero.tar.gz from:
https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/sezero_4.5_20111101/

cd /opt
sudo tar -zxvf mingw-w32-bin_x86_64-linux_20111101_sezero.tar.gz
(automatically makes cross_win32 link)
export PATH=/opt/cross_win32/bin:$PATH

These older packages are needed in addition to the Kubuntu 14.04 packages:
sudo dpkg -i libgmp3c2_4.3.2+dfsg-1ubuntu1_amd64.deb libmpc2_0.9-4_amd64.deb libmpfr1ldbl_2.4.2-3ubuntu1_amd64.deb

../4.8.5-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -debug-and-release -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /home/dewhisna/Qt/4.8.5-win32-sezero-noex -no-exceptions -confirm-license 

Need to copy:
/opt/W32_180676/bin/libstdc++-6.dll
/opt/W32_180676/bin/libgcc_s_sjlj-1.dll

Make with:  make -j 32
Still need: make install (even though it's the build folder, so headers get copied)
Still need to copy required source dependencies as described below...

Add this:
no-pkg-config


----------------------------------------------------

--------------------------
Qt 4.8.5 -- VNC (DYNAMIC):   14.04 Trusy and 16.04 Xenial Only!
--------------------------

Requires PATCHED Qt source!

HOME:
../4.8.5-src-patched-vnc/configure -platform qws/vnc-linux-x86_64-g++ -opensource -release -embedded -stl -qt-gfx-linuxfb -qt-gfx-qvfb -qt-gfx-vnc -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -openssl -no-nis -no-cups -depths 8,16,18,32 -qt-kbd-tty -qt-kbd-qvfb -qt-kbd-linuxinput -qt-mouse-linuxinput -qt-mouse-qvfb -qt-mouse-pc -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -confirm-license -prefix /home/dewhisna/Qt/4.8.5-vnc-run

AWS:
../4.8.5-src-patched-vnc/configure -platform qws/vnc-linux-x86_64-g++ -opensource -release -embedded -stl -qt-gfx-linuxfb -qt-gfx-qvfb -qt-gfx-vnc -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -openssl -no-nis -no-cups -depths 8,16,18,32 -qt-kbd-tty -qt-kbd-qvfb -qt-kbd-linuxinput -qt-mouse-linuxinput -qt-mouse-qvfb -qt-mouse-pc -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -confirm-license -prefix /home/ubuntu/Qt/4.8.5-vnc-run

Use with modified noVNC from:
http://github.com/kanaka/noVNC
(see checkin on "purebiblesearch")

Note: "-platform" should be used above instead of "-xplatform" so that it knows it's a native build and will use local threading support and things like notifyFileSystemWatcher, which Qt won't do correctly if it thinks it's a full cross-compile.  HOWEVER, you must run qmake with "-spec qws/vnc-linux-x86_64-g++" in addition to "CONFIG+=release" and the project file/path so that it properly includes the mkspec to define "vnc" and "VNCSERVER" or else KJPBS won't build correctly!!!


Compile KJPBS with:

~/Qt/4.8.5-vnc-run/bin/qmake -spec /home/ubuntu/Qt/4.8.5-vnc-run/mkspecs/qws/vnc-linux-x86_64-g++ CONFIG+=release -o Makefile ../../KJVCanOpener/KJVCanOpener.pro
make -j 4
Copy to /var/www/KingJamesPureBibleSearch/KJVCanOpener/app/KingJamesPureBibleSearch with sticky bits:
-rwxr-sr-x 1 kjpbs kjpbs 6245526 Oct  5  2015 /var/www/KingJamesPureBibleSearch/KJVCanOpener/app/KingJamesPureBibleSearch*

NOTE: If you manually launch KingJamesPureBibleSearch as VNC QWS canvas as a user other than 'pbsuser01', make certain to delete '/tmp/qtembedded-0/' or the noVNC server will fail to launch!!!  Same applies for other user entries!


---- Tested with ----

Building with libvncserver:
http://libvncserver.sourceforge.net/
	./configure
	make
	sudo make install
http://github.com/connectedtable/qt-libvncserver
	qmake libvncserver.pro
	make
	make install
http://github.com/kanaka/noVNC

---------------------

Could not get it to work with a static-built Qt Embedded, even with linking the qt-libvncserver
into KJPBS.  Maybe it would have worked if I had built Qt, then built qt-libvncserver, then
rebuilt Qt with the new static qt-libvncserver added.  But the easy fix, since vncserver itself
is a dynamic library that needs to be installed system-wide, is to just build Qt Embedded as
dynamic.  The app itself can be static, just not the main Qt and plugins.

Other notes: the CToolTipEdit needs to have a style more like that of the Emscripten build, as
it gave a warning about my window attributes not being supported on Qt 4.8.5.  The menus and
dialogs seemed to function correctly with normal exec() logic, unlike that of Emscripten.  And
of course it isn't sandboxed and can access the local filesystem.  Got it to run pretty well
using Remote Desktop Viewer, but never quite got it to run with noVNC, at least not yet.  It
would start to connect and then disconnect, regardless of what webserver was running noVNC.


===============================================================================
===============================================================================


Qt 4.8.6
========

Mac Cocoa
---------
Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../4.8.6-src/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.6-cocoa-static-run -confirm-license


Mac Cocoa (Patched)
-------------------
Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../4.8.6-src-patched/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/4.8.6-patched-cocoa-static-run -confirm-license


Linux
-----
Linux LOCAL BUILD (x64 release):
../4.8.6-src/configure -platform linux-g++-64 -opensource -release -static -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-4.8.6-64-local -confirm-license

use: make -j 16 (or just -j if enough RAM)


Qt 4.8.6 -- Win32 Cross-Compile [Kubuntu Packaged MinGW]
--------------------------------------------------------

Built with: Kubuntu cross-compile package for MinGW: mingw-w64, g++-mingw-w64, gcc-mingw-64, gcc-mingw-w64-base, mingw-w64-i686-dev, mingw-w64-x86-64-dev, g++-mingw-w64-i686, gcc-mingw-w64-i686, g++-mingw-w64-x86-64, gcc-mingw-w64-x86-64, mingw-w64-common, binutils-mingw-w64, binutils-mingw-w64-i686, binutils-mingw-x86-64, mingw-w64-tools, mingw32-binutils, mingw32, mingw32-runtime

../4.8.6-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -debug-and-release -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-script -no-scripttools -no-phonon -no-dbus -no-opengl -no-qt3support -no-webkit -no-xmlpatterns -no-svg -nomake tools -nomake examples -nomake demos -prefix /home/dewhisna/Qt/4.8.6-win32-kubuntu -confirm-license 

Note: This one SHOULD work, but looks like they've broken something with their include paths with the #include <itemviews/qfileiconprovider_p.h> on line 61 of /home/dewhisna/Qt/4.8.6-src/src/gui/dialogs/qfiledialog.cpp

Make with:  make -j 32

Add this:
no-pkg-config


===============================================================================
===============================================================================


--------------------------
Qt 4.8.7 -- VNC (DYNAMIC):   18.04 Bionic Only!
--------------------------

Requires PATCHED Qt source!
Requires openssl 1.0.x dev library instead of 1.1.x (see notes in EC2 setup)

cd ~/Qt
tar -zxvf qt-everywhere-opensource-src-4.8.7.tar.gz
mv qt-everywhere-opensource-src-4.8.7 4.8.7-src
cd 4.8.7-src
patch -p1 < ~/Documents/programs/Bible/KingJamesPureBibleSearch/patches/Qt/Qt_4_8_5_vnc.patch	## <<< Note: 4.8.5 patch works for 4.8.7
cd ~/Qt
mkdir 4.8.7-vnc
cd 4.8.7-vnc
../4.8.7-src/configure -platform qws/vnc-linux-x86_64-g++ -opensource -release -embedded -stl -qt-gfx-linuxfb -qt-gfx-qvfb -qt-gfx-vnc -qt-zlib -qt-libtiff -qt-libpng -qt-libmng -qt-libjpeg -qt-sql-sqlite -openssl -no-nis -no-cups -depths 8,16,18,32 -qt-kbd-tty -qt-kbd-qvfb -qt-kbd-linuxinput -qt-mouse-linuxinput -qt-mouse-qvfb -qt-mouse-pc -fontconfig -no-phonon -no-dbus -no-opengl -no-qt3support -no-accessibility -no-javascript-jit -no-script -no-scripttools -no-webkit -no-xmlpatterns -no-svg -nomake examples -nomake demos -nomake tests -confirm-license -prefix /home/ubuntu/Qt/4.8.7-vnc-run
rm -rf src/3rdparty/webkit/
make -j4
make install

Source Dependencies:
--------------------
cd $$[QT_INSTALL_PREFIX]
mkdir -p src/3rdparty
cd src/3rdparty/
cp -r <Qt-Source-Folder>/src/3rdparty/zlib* .
cd $$[QT_INSTALL_PREFIX]
mkdir -p src/gui/mac/qt_menu.nib
cd src/gui/mac/qt_menu.nib/
cp <Qt-Source-Folder>/src/gui/mac/qt_menu.nib/* .


Use with modified noVNC from:
http://github.com/kanaka/noVNC
(see checkin on "purebiblesearch")

Note: "-platform" should be used above instead of "-xplatform" so that it knows it's a native build and will use local threading support and things like notifyFileSystemWatcher, which Qt won't do correctly if it thinks it's a full cross-compile.  HOWEVER, you must run qmake with "-spec qws/vnc-linux-x86_64-g++" in addition to "CONFIG+=release" and the project file/path so that it properly includes the mkspec to define "vnc" and "VNCSERVER" or else KJPBS won't build correctly!!!


Compile wwWidgets with:
-----------------------
mkdir -p ~/Qt/build-wwwidgets4-Qt_4_8_7_vnc/Release/
cd ~/Qt/build-wwwidgets4-Qt_4_8_7_vnc/Release/
~/Qt/4.8.7-vnc-run/bin/qmake -spec /home/ubuntu/Qt/4.8.7-vnc-run/mkspecs/qws/vnc-linux-x86_64-g++ CONFIG+=release -o Makefile ~/Documents/programs/Bible/KingJamesPureBibleSearch/support/wwWidgets/wwwidgets4.pro
make
make install
cp ~/Documents/programs/Bible/KingJamesPureBibleSearch/support/wwWidgets/translations/wwwidgets_*.qm ~/Qt/4.8.7-vnc-run/translations/


qtstyleplugin:
--------------
Note: There is no qtstyleplugin neededfor Qt 4.x!


Compile KJPBS with:
-------------------
NOTE: First clean *.qm from ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/translations/

cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs
mkdir -p build-KJVCanOpener-Qt_4_8_7_vnc_gcc_64/Release
cd build-KJVCanOpener-Qt_4_8_7_vnc_gcc_64/Release/
~/Qt/4.8.7-vnc-run/bin/qmake -spec /home/ubuntu/Qt/4.8.7-vnc-run/mkspecs/qws/vnc-linux-x86_64-g++ CONFIG+=release -o Makefile ../../KJVCanOpener/KJVCanOpener.pro
make -j 4
Copy to /var/www/KingJamesPureBibleSearch/KJVCanOpener/app/KingJamesPureBibleSearch with sticky bits:
-rwxr-sr-x 1 kjpbs kjpbs 6245526 Oct  5  2015 /var/www/KingJamesPureBibleSearch/KJVCanOpener/app/KingJamesPureBibleSearch*

Copy ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/translations/*.qm to /var/www/KingJamesPureBibleSearch/KJVCanOpener/translations/

NOTE: If you manually launch KingJamesPureBibleSearch as VNC QWS canvas as a user other than 'pbsuser01', make certain to delete '/tmp/qtembedded-0/' or the noVNC server will fail to launch!!!  Same applies for other user entries!


===============================================================================
===============================================================================


Experimenting with Qt 5:
========================

Qt 5.0.1
========
These options no longer exist:
-qt-libtiff 
-qt-libmng
-no-phonon
-no-qt3support
-no-webkit
-no-xmlpatterns
-no-svg

LOCAL BUILD (x64 release):  <<<<<  Local build -- note: Can't build static and have tools.  Can't build with -no-opengl
../5.0.1-src/configure -platform linux-g++-64 -developer-build -opensource -release -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -no-c++11 -gui -widgets -fontconfig -no-dbus -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.0.1-64-local


Possibly needed for LSB:
-no-directfb
-no-linuxfb
-no-kms



Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.0.1-src/configure -platform macx-g++ -opensource -release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -arch x86 -arch x86_64 -prefix /Users/dewhisna/Qt/5.0.1-cocoa-static-run
*** Won't Build QtCore on Mac with: -no-opengl
Must delete: qttools folder (it doesn't listen to the -nomake tools!), qtwebkit, qtxmlpatterns


./configure -platform macx-clang-32 -opensource -debug-and-release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.1-cocoa-static-run

./configure -platform macx-g++-32 -opensource -debug-and-release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.1-cocoa-static-run
????? It won't build 32-bit on Mac! ?????

./configure -platform macx-clang -opensource -debug-and-release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.1-cocoa-static-run
????? Won't build on clang due to QCocoaWindow namespace in qcocoawindow.h ?????


This one builds for Qt5, but target KJPBS app won't compile due to duplicate symbols in qcocoawindow platform:
--------------------------------------------------------------------------------------------------------------
./configure -platform macx-g++ -opensource -debug-and-release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.1-cocoa-static-run


./configure -platform macx-g++ -opensource -debug-and-release -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -no-xcb -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.1-cocoa-run

===============================================================================
===============================================================================

Qt 5.0.2
========

Linux
-----

Linux Local Build (x32 static)
../5.0.2-src/configure -platform linux-g++-32 -developer-build -opensource -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -gui -widgets -fontconfig -no-dbus -no-opengl -nomake tools -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.0.2-32-local-static -confirm-license 


Linux Local Build (x32 dynamic)
../5.0.2-src/configure -platform linux-g++-32 -developer-build -opensource -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -gui -widgets -fontconfig -no-dbus -no-opengl -nomake tools -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.0.2-32-local -confirm-license 


Linux Local Build (x64 static):  <<<<<<<<<<<< EXPERIMENTAL BUILD!!!  (note: tools will not build as static)
../5.0.2-src/configure -platform linux-g++-64 -developer-build -opensource -release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -gui -widgets -fontconfig -no-dbus -no-opengl -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.0.2-64-local -confirm-license 


Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.0.2 (note: doesn't build docs)
../5.0.2-src/configure -platform linux-g++-64 -developer-build -opensource -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -gui -widgets -fontconfig -no-dbus -no-opengl -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.0.2-64-local -confirm-license 


To build/install docs:
----------------------
make docs
make install_docs



MAC Cocoa:
----------

// Doesn't want to work with -no-opengl that still works in Linux!

Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.0.2-src/configure -platform macx-g++-32 -opensource -release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -nomake tools -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.2-cocoa-static-run -confirm-license 

Cocoa x86/x64 Dynamic:   <<<< This was the development build for Mac
../5.0.2-src/configure -platform macx-g++-32 -opensource -debug-and-release -developer-build -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -nomake examples -nomake demos -nomake tests -prefix /Users/dewhisna/Qt/5.0.2-cocoa-run -confirm-license 

===============================================================================
===============================================================================

Qt 5.1.0 Beta 1 - (Desktop)
===========================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.1.0 (note: doesn't build docs)
(Note: would NOT build with the "-no-opengl" option!)
../5.1.0-beta1-src/configure -platform linux-g++-64 -developer-build -opensource -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.1.0-beta1-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs



Qt 5.1.0 Release - (Desktop)
===========================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.1.0 (note: doesn't build docs)
(Note: would NOT build with the "-no-opengl" option!)
../5.1.0-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -nomake demos -nomake tests -prefix /usr/local/Trolltech/Qt-5.1.0-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs


===============================================================================
===============================================================================


Qt 5.2.0 Beta 1 - (Desktop)
===========================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.2.0-beta1 (note: doesn't build docs)
(Note: would NOT build with the "-no-opengl" option!)
../5.2.0-beta1-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.2.0-beta1-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs


===============================================================================
===============================================================================

Qt 5.2.0 RC1-159 - (Desktop)
===========================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):
(Note: would NOT build with the "-no-opengl" option!)
../5.2.0-rc1-159-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.2.0-rc1-159-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs


===============================================================================
===============================================================================

Qt 5.2.0 RC1 - (Desktop)
========================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.2.0-rc1 (note: doesn't build docs)
../5.2.0-rc1-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.2.0-rc1-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs


MAC Cocoa:
----------

Cocoa x86/x64 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.2.0-rc1-src/configure -platform macx-g++ -opensource -debug-and-release -static -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -nomake tools -nomake examples -nomake tests -skip webkit -skip webkit-examples -prefix /Users/dewhisna/Qt/5.2.0-rc1-cocoa-static-run -confirm-license



Qt 5.2.0 - (Desktop)
====================

MAC Cocoa:
----------

Cocoa x86 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.2.0-src/configure -platform macx-g++-32 -opensource -debug-and-release -static -accessibility -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -nomake tools -nomake examples -nomake tests -skip webkit -skip webkit-examples -prefix /Users/dewhisna/Qt/5.2.0-cocoa-static-run -confirm-license


Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.2.0 (note: doesn't build docs)
../5.2.0-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.2.0-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs



Qt 5.2.1 - (Desktop)
====================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.2.1 (note: doesn't build docs)
../5.2.1-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -no-javascript-jit -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.2.1-64-local -confirm-license 

To build/install docs:
----------------------
make docs
make install_docs


MAC Cocoa:
----------

Cocoa x86 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.2.1-src/configure -platform macx-g++-32 -opensource -debug-and-release -static -accessibility -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-javascript-jit -no-dbus -nomake tools -nomake examples -nomake tests -skip webkit -skip webkit-examples -prefix /Users/dewhisna/Qt/5.2.1-cocoa-static-run -confirm-license



Qt 5.3.0 - (Desktop)
====================

Note: -no-javascript-jit is no longer an option in 5.3.0

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.3.0 (note: doesn't build docs)
../5.3.0-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.3.0-64-local -confirm-license 

use:  make -j 16 (or higher)

To build/install docs:
----------------------
make docs
make install_docs


MAC Cocoa:
----------

Cocoa x86 Static:
../5.3.0-src/configure -platform macx-g++-32 -opensource -debug-and-release -static -accessibility -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-dbus -nomake tools -nomake examples -nomake tests -skip xmlpatterns -skip declarative -skip webkit -skip webkit-examples -prefix /Users/dewhisna/Qt/5.3.0-cocoa-static-run -confirm-license

NOTE: Mac static build for Qt 5.3.0 has issue with duplicate symbols on xmlpatterns and declarative -- current solution is to skip it, since we don't need it.
NOTE: While this will now build in and of itself, it still has duplicate symbols in the bearer plugins and jpeg plugins when linking with KJPBS.  Doing a patch instead:


MAC Cocoa (Patched):
--------------------

Cocoa x86 Static:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
../5.3.0-src-patched/configure -platform macx-g++-32 -opensource -debug-and-release -static -accessibility -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -no-dbus -nomake tools -nomake examples -nomake tests -skip declarative -skip webkit -skip webkit-examples -prefix /Users/dewhisna/Qt/5.3.0-cocoa-static-run -confirm-license

NOTE: Adding xmlpatterns back in as the patchces fix it, but not the declarative (as I didn't bother addressing its issues, since they cut much deeper)


Qt 5.3.0 -- Win32 Cross-Compile
-------------------------------
Build with MinGW-w64-i686 from:
http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/rubenvb/

Alternate: Build with:   i686-w64-mingw32-gcc-4.8.0-linux64_rubenvb.tar.xz from:
http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/rubenvb/gcc-4.8-release/
untar'd to: /opt/mingw32_4.8.0_rubenvb/
with: ln -s /opt/mingw32_4.8.0_rubenvb/ /opt/cross_win32
add to path: /opt/cross_win32

Built with:   i686-w64-mingw32-gcc-4.7.4-release-linux64_rubenvb.tar.xz from:
https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/rubenvb/gcc-4.7-release/
untar'd to: /opt/mingw32_4.7.4_rubenvb/
with: ln -s /opt/mingw32_4.7.4_rubenvb/ /opt/cross_win32
add to path: /opt/cross_win32

../5.3.0-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -release -force-debug-info -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -qt-freetype -qt-pcre -qt-xkbcommon -gui -widgets -no-dbus -no-opengl -skip webkit -skip webkit-examples -skip declarative -skip winextras -skip activeqt -skip tools -nomake examples -no-pkg-config -prefix /home/dewhisna/Qt/5.3.0-win32 -confirm-license

Note: Won't actually use -fontconfig or -qt-xkbcommon, though doesn't complain about them specified in the config script
Note: declarative, winextras, and activeqt won't build

build within ~/Qt/5.3.0-win32, requires "make install" when done even though prefix is the same path (to flatten the module structure).  And requires the same source dependency copies for all Qt4/Qt5 platforms (described below)



Qt 5.3.1 - (Desktop)
====================

MAC Cocoa:  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON MAC
----------

Using Prebuilt Qt x86_64 with dynamic framework...  ~/Qt/5.3.1-ios install...

I couldn't ever get it to build statically for 32-bit without issues of either global symbols or multiply defined functions.  So I'm punting and dropping 32-bit support.  This will mean we can only target OSX 10.6+ and 64-bit only.


Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.3.1 (note: doesn't build docs)
../5.3.1-src/configure -platform linux-g++-64 -release -force-debug-info -opensource -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.3.1-64-local -confirm-license 

use:  make -j 16 (or higher)

To build/install docs:
----------------------
make docs
make install_docs


Qt 5.3.1 -- Win32 Cross-Compile
-------------------------------
Build with MinGW-w64-i686 from:
http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/rubenvb/

Alternate: Build with:   i686-w64-mingw32-gcc-4.8.0-linux64_rubenvb.tar.xz from:
http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/rubenvb/gcc-4.8-release/
untar'd to: /opt/mingw32_4.8.0_rubenvb/
with: ln -s /opt/mingw32_4.8.0_rubenvb/ /opt/cross_win32
add to path: /opt/cross_win32/bin

Built with:   i686-w64-mingw32-gcc-4.7.4-release-linux64_rubenvb.tar.xz from:
https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/rubenvb/gcc-4.7-release/
untar'd to: /opt/mingw32_4.7.4_rubenvb/
with: ln -s /opt/mingw32_4.7.4_rubenvb/ /opt/cross_win32
add to path: /opt/cross_win32/bin

../5.3.1-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -release -force-debug-info -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -qt-freetype -qt-pcre -qt-xkbcommon -gui -widgets -no-dbus -no-opengl -skip webkit -skip webkit-examples -skip declarative -skip winextras -skip activeqt -skip tools -nomake examples -no-pkg-config -prefix /home/dewhisna/Qt/5.3.1-win32 -confirm-license

Note: Won't actually use -fontconfig or -qt-xkbcommon, though doesn't complain about them specified in the config script
Note: declarative, winextras, and activeqt won't build

build within ~/Qt/5.3.1-win32, requires "make install" when done even though prefix is the same path (to flatten the module structure).  And requires the same source dependency copies for all Qt4/Qt5 platforms (described below)


Qt 5.3.1 -- Win32 Cross-Compile [Kubuntu Packaged MinGW]
--------------------------------------------------------

Built with: Kubuntu cross-compile package for MinGW: mingw-w64, g++-mingw-w64, gcc-mingw-w64, gcc-mingw-w64-base, mingw-w64-i686-dev, mingw-w64-x86-64-dev, g++-mingw-w64-i686, gcc-mingw-w64-i686, g++-mingw-w64-x86-64, gcc-mingw-w64-x86-64, mingw-w64-common, binutils-mingw-w64, binutils-mingw-w64-i686, binutils-mingw-w64-x86-64, mingw-w64-tools, mingw32-binutils, mingw32, mingw32-runtime

../5.3.1-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -release -force-debug-info -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -qt-freetype -qt-pcre -qt-xkbcommon -gui -widgets -no-dbus -no-opengl -skip webkit -skip webkit-examples -skip declarative -skip winextras -skip activeqt -skip tools -nomake examples -no-pkg-config -prefix /home/dewhisna/Qt/5.3.1-win32-kubuntu -confirm-license

build within ~/Qt/5.3.1-win32-kubuntu, requires "make install" when done even though prefix is the same path (to flatten the module structure).  And requires the same source dependency copies for all Qt4/Qt5 platforms (described below)

Need to copy:
/usr/lib/gcc/i686-w64-mingw32/4.8/libstdc++-6.dll
/usr/lib/gcc/i686-w64-mingw32/4.8/libgcc_s_sjlj-1.dll
/usr/i686-w64-mingw32/lib/libwinpthread-1.dll

Make with:  make -j 32



Qt 5.3.1 -- Win32 Cross-Compile [MinGW32 GCC 4.8.0 w/Dwarf2 exceptions]  <<<<< THIS WAS USED FOR THE KJPBS RELEASE BUILD ON WINDOWS
-----------------------------------------------------------------------

Build with MinGW-w64-i686 from:
http://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/rubenvb/gcc-4.8-dw2-release/
Using: i686-w64-mingw32-gcc-dw2-4.8.0-linux64_rubenvb.tar.xz

untar'd to: /opt/mingw32-dw2_4.8.0_rubenvb/
with: ln -s /opt/mingw32-dw2_4.8.0_rubenvb/ /opt/cross_win32
add to path: /opt/cross_win32/bin

mkdir ~/Qt/5.3.1-win32-mingw-dw2_4.8.0_rubenvb
cd ~/Qt/5.3.1-win32-mingw-dw2_4.8.0_rubenvb

../5.3.1-src/configure -xplatform win32-g++ -device-option CROSS_COMPILE=i686-w64-mingw32- -opensource -release -force-debug-info -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -fontconfig -qt-freetype -qt-pcre -qt-xkbcommon -gui -widgets -no-dbus -no-opengl -skip webkit -skip webkit-examples -skip declarative -skip winextras -skip activeqt -skip tools -nomake examples -no-pkg-config -prefix /home/dewhisna/Qt/5.3.1-win32-mingw-dw2_4.8.0_rubenvb -confirm-license

Note: Won't actually use -fontconfig or -qt-xkbcommon, though doesn't complain about them specified in the config script
Note: declarative, winextras, and activeqt won't build

build within ~/Qt/5.3.1-win32-mingw-dw2_4.8.0_rubenvb, requires "make install" when done even though prefix is the same path (to flatten the module structure).  And requires the same source dependency copies for all Qt4/Qt5 platforms (described below)

Need to copy:
/opt/mingw32-dw2_4.8.0_rubenvb/i686-w64-mingw32/lib/libstdc++-6.dll
/opt/mingw32-dw2_4.8.0_rubenvb/i686-w64-mingw32/lib/libgcc_s_dw2-1.dll
/opt/mingw32-dw2_4.8.0_rubenvb/i686-w64-mingw32/lib/libwinpthread-1.dll

Make with:  make -j 32

Note: Using the Dwarf2 exceptions is important to avoid the context swapping overhead on every single function call with the SJLJ method, which was causing us major performance issues.



Qt 5.4.0 - (Desktop)
====================

Linux
-----

Linux LOCAL BUILD (x64 dynamic):   <<<<< This is the "official" local build for 5.4.0 (note: doesn't build docs)
../5.4.0-src/configure -v -platform linux-g++-64 -release -force-debug-info -opensource -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-xcb -qt-pcre -qt-xkbcommon -gui -widgets -fontconfig -no-dbus -nomake examples -prefix /usr/local/Trolltech/Qt-5.4.0-64-local -confirm-license 

use:  make -j 16 (or higher)

To build/install docs:
----------------------
make docs
make install_docs


Qt 5.5.0 - Alpha
================

Mac iOS Build
-------------

mkdir ~/Qt/5.5.0-alpha-ios-build
cd ~/Qt/5.5.0-alpha-ios-build
../5.5.0-alpha-src/configure -xplatform macx-ios-clang -debug-and-release -prefix /Users/dewhisna/Qt/5.5.0-alpha-ios-run -opensource -confirm-license -qt-zlib -qt-pcre -qt-sql-sqlite -qt-libpng -qt-libjpeg -qt-freetype



====================
    Qt 5.5.0
====================


-------------------------------------
Qt 5.5.0 -- VNC/WebChannel (DYNAMIC):
-------------------------------------

AWS:
../5.5.0-src/configure -v -release -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -qt-freetype -qt-pcre -qt-xcb -qt-xkbcommon-x11 -libinput -fontconfig -directfb -linuxfb -nomake examples -nomake tests -opensource -confirm-license -prefix /home/ubuntu/Qt/5.5.0-vnc-run


// Note: Our AWS apparently isn't setup with necessary dev packages for "-icu -fontconfig -libinput -directfb", but proceeding without them, as I'm not sure we need them.

// Note: Qt 5 has dropped QWS to move to QPA.  Not sure if noVNC can be made to work with QPA yet.  This build is specifically
//	to setup our AWS EC2 to be the server for webchannel.


Building Target WebChannel KJPBS using above Qt 5.5.0 build:

cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/
mkdir -p build-KJVCanOpener-Qt_5_5_0_gcc_64/Release
cd build-KJVCanOpener-Qt_5_5_0_gcc_64/Release
~/Qt/5.5.0-vnc-run/bin/qmake CONFIG+=release CONFIG+=console CONFIG+=nospeech CONFIG+=webchannel -o Makefile ../../KJVCanOpener/KJVCanOpener.pro
make -j 8
sudo cp -r html/* /var/www/webchannel/html/
cp KingJamesPureBibleSearch ~/webchannel/KJVCanOpener/app/

Must have built ~/Qt/build-wwwidgets4-Qt_5_5_0_vnc/ and ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/build-qtstyleplugins-5_5_0_webchannel/


====================
    Qt 5.5.1
====================

Note: When building for Qt 5.5.1, it seems to be setup for Wayland and so the libinput.h stuff
is missing when running on stock Kubuntu 14.04, so "-libinput" must be eliminated when doing
the WebChannel build (not that it was ever needed anyway for the console version).

===============================================================================


====================
  Qt 5.15.2 Linux
====================

sudo apt-get build-dep qtbase5-dev qtbase5-dev-tools qtwebengine5-dev qttools5-dev-tools

sudo apt-get install libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-xinerama0-dev libxkbcommon-dev libxkbcommon-x11-dev libxcb-util-dev libxcb-dri3-dev

sudo apt-get install libnss3-dev flex   (webengine)

cd ~/Qt/
tar -Jxvf ~/Downloads/software/Qt/5.15.2/qt-everywhere-src-5.15.2.tar.xz
mv qt-everywhere-src-5.15.2 5.15.2-src
mkdir 5.15.2-build
cd 5.15.2-build
../5.15.2-src/configure -release -opensource -confirm-license -verbose -prefix /home/dewhisna/Qt/5.15.2 -nomake examples -nomake tests -xcb-xlib -xcb -bundled-xcb-xinput -xkbcommon


====================
  Qt 5.15.16 Linux
====================
### WITHOUT WEBENGINE ###

sudo apt-get build-dep qtbase5-dev qtbase5-dev-tools qttools5-dev-tools

sudo apt-get install libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-xinerama0-dev libxkbcommon-dev libxkbcommon-x11-dev libxcb-util-dev libxcb-dri3-dev

cd ~/Qt/
tar -Jxvf ~/Downloads/software/Qt/5.15.16/qt-everywhere-src-5.15.16.tar.xz
mv qt-everywhere-src-5.15.16 5.15.16-src

### GCC 13, mapbox-gl-native Bug Patch:
# https://github.com/mapbox/mapbox-gl-native/issues/16672
# https://sources.debian.org/data/main/q/qtlocation-opensource-src/5.15.15+dfsg-3/debian/patches/gcc_13.diff
cd ~/Qt/5.15.16-src/qtlocation
patch -p1 < ~/Documents/programs/Bible/KingJamesPureBibleSearch/patches/Qt/Qt_5_15_16_qtlocation.patch

cd ~/Qt/
mkdir 5.15.16-build
cd 5.15.16-build
../5.15.16-src/configure -release -opensource -confirm-license -verbose -prefix /home/dewhisna/Qt/5.15.16 -nomake examples -nomake tests -xcb-xlib -xcb -bundled-xcb-xinput -xkbcommon -skip qtwebengine
gmake -j 16
gmake install


====================
  Qt 6.0.0 Linux
====================

Same dependencies as 5.15.2?  (see above)

sudo apt-get install libclang-dev

cd ~/Qt/
tar -Jxvf ~/Downloads/software/Qt/6.0.0/qt-everywhere-src-6.0.0.tar.xz
mv qt-everywhere-src-6.0.0 6.0.0-src
mkdir 6.0.0-build
cd 6.0.0-build
../6.0.0-src/configure -release -opensource -confirm-license -prefix /home/dewhisna/Qt/6.0.0 -nomake examples -nomake tests -xcb-xlib -xcb -bundled-xcb-xinput -xkbcommon


====================
  Qt 6.2.2 Linux
====================

Same dependencies as 5.15.2?  (see above), plus:

sudo apt-get install libmd4c-html0-dev

sudo apt-get install libclang-dev

Also, needs these for webengine:
sudo apt-get install nodejs libxshmfence-dev libxkbfile-dev

---------------
NOTE: Qt requires nodejs 10.19+, but on Bionic 18.04, there is
only nodejs 8.10.  So, need to do the following to move to 10.24:
curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -
echo "deb [arch=$(dpkg --print-architecture)] https://deb.nodesource.com/node_10.x $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/nodesource.list >/dev/null
sudo apt-get update
sudo apt-get install nodejs
---------------
Requires minimum of gcc 8:
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt update
sudo apt install gcc-9 g++-9
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 7
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 7
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9
sudo update-alternatives --config gcc
sudo update-alternatives --config g++
gcc --version
g++ --version
---------------

cd ~/Qt/
tar -Jxvf ~/Downloads/software/Qt/6.2.2/qt-everywhere-src-6.2.2.tar.xz
mv qt-everywhere-src-6.2.2 6.2.2-src

## QTBUG-117950 patch:
# NOTE: With libxkbcommon 1.6.0+, it's necessary to patch the source code
# https://bugreports.qt.io/browse/QTBUG-117950
# https://code.qt.io/cgit/qt/qtbase.git/commit/?id=8af35d27e8f02bbb99aef4ac495ed406e50e3cca
cd ~/Qt/6.2.2-src/qtbase
patch -p1 < ~/Documents/programs/Bible/KingJamesPureBibleSearch/patches/Qt/qtbug-117950.patch

## ASSIMP Bug patch:
# https://github.com/assimp/assimp/issues/5072
# https://github.com/assimp/assimp/commit/253f8bfa621a9fa6cd2c36291cdaa8c60c99322c
cd ~/Qt/6.2.2-src/
patch -p1 < ~/Documents/programs/Bible/KingJamesPureBibleSearch/patches/Qt/Qt_6_assimp_253f8bf.patch

cd ~/Qt/
mkdir 6.2.2-build
cd 6.2.2-build
../6.2.2-src/configure -release -opensource -confirm-license -prefix /home/dewhisna/Qt/6.2.2 -nomake examples -nomake tests -xcb-xlib -xcb -bundled-xcb-xinput -xkbcommon
cmake --build . --parallel
cmake --install .

Note: For QtWebEngine: node.js version 10.19 or later is required as well as libxshmfence-dev

WARNING: Need LOTS of RAM to compile, even on a 2 Core CPU, especially for WebEngine.
8GB isn't even enough when running parallel on a 2 Core!  You can barely squeak by with
8GB if only building on a single core with nothing else running -- barely.

Note: Qt is broken with CMake >= 3.25.0 (when building qtwebengine):
https://bugreports.qt.io/browse/QTBUG-109046
https://forum.qt.io/topic/140651/need-help-statically-building-qt-for-ubuntu/16

---------------

For building without webengine:
cd ~/Qt/6.2.2-src
rm -r qtwebengine
cd ~/Qt/
mkdir 6.2.2-build
cd 6.2.2-build
../6.2.2-src/configure -release -opensource -confirm-license -prefix /home/dewhisna/Qt/6.2.2 -nomake examples -nomake tests -xcb-xlib -xcb -bundled-xcb-xinput -xkbcommon
cmake --build . --parallel
cmake --install .


====================
  Qt 6.5.3 MacOS
 (Universal Build)
====================
NOTE: QtWebEngine won't build with Xcode 15.0.1!!  It does with Xcode 14.3.1.
There seems to be some sort of linker bug in Xcode 15.0.1 triggered by QtWebEngine.
BUT, here's the kicker.  It says that 14.3.1 isn't compatible with Sonoma.  So what
you have to do is install 15.0.1 and manually download 14.3.1 and then use:
$ sudo xcode-select --switch /Applications/Xcode_14.3.1.app
That will run the compiler from 14.3.1 and still fulfills the 15.0.1 and Sonoma
requirement.  Note that the command-line tools from 15.0.1 work fine, which is good
because it won't let you install the 14.3.1 command-line tools.  Ugh!
NOTE: Requires Big Sur (MacOS 11 or Higher! and OS requires a minimum of 8GB for itself!)
NOTE: Won't build on MacMini 2012 and older computers!
Ref: https://doc.qt.io/qt-6/macos-building.html
Ref: https://doc.qt.io/qt-6/macos.html
Dependencies:
  CMake >= 3.21.1
  Ninja
  Python html5lib
  Bison, Flex
  Gperf
  Node.js version 8 or later (version 12 recommended)
  brew install llvm

virtualenv venv_qt_build --python=python3
source venv_qt_build/bin/activate
pip install html6lib

xxx export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
xxx export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
export LLVM_INSTALL_DIR=/opt/homebrew/opt/llvm
(NOTE: The above export fails on universal build because it only has arm64 target.  This will cause it to not build lupdate, but lupdate work can be done on either a non-universal build or on a different platform.)

cd ~/Qt/
tar -Jxvf ~/Downloads/software/Qt/6.5.3/qt-everywhere-src-6.5.3.tar.xz
mv qt-everywhere-src-6.5.3 6.5.3-src
mkdir 6.5.3-build
cd 6.5.3-build

With VNC (but doesn't compile correctly as it seems to be a commercial-only feature):
../6.5.3-src/configure -release -opensource -confirm-license -prefix /Users/dewhisna/Qt/6.5.3 -nomake examples -nomake tests -feature-vnc -- -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" -DQT_FEATURE_vnc=ON

Without VNC:
../6.5.3-src/configure -release -opensource -confirm-license -prefix /Users/dewhisna/Qt/6.5.3 -nomake examples -nomake tests -- -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"

NOTE: Be careful to specify the Intel architecture ("x86_64") first, otherwise Qt may not enable all the x86 functionality.
NOTE: A universal build always needs to include the architecture of your development machine, as the process relies on tools that are built and run on your machine as part of the overall build.
cmake --build . --parallel
cmake --install .

Use port to install libmaxminddb:
sudo port install libmaxminddb

sudo port install ninja

To find Ninja (from sudo port install ninja):
In the Kit, add to the environment:  PATH=/opt/local/bin:${PATH}


====================
  Qt 6.5.3 Linux
====================

Ref: https://doc.qt.io/qt-6/linux-requirements.html
Dependencies:
sudo apt-get install libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libxcb-cursor-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-util-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev

sudo apt-get install libclang-dev llvm-dev clang

Also, needs these for webengine:
sudo apt-get install nodejs libxshmfence-dev libxkbfile-dev

For text-to-speech:
sudo apt-get install flite1-dev
sudo apt-get install libspeechd-dev speech-dispatcher

Ref: https://doc.qt.io/qt-5/qdoc-guide-clang.html
sudo apt-get install libclang-12-dev llvm-12-dev clang-12


---------------
NOTE: Qt requires nodejs 12+, but on Bionic 18.04, there is
only nodejs 8.10, and on Focal 20.04, there is only 10.19.  So, need to do the
following to move to 12.22:
curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -
echo "deb [arch=$(dpkg --print-architecture)] https://deb.nodesource.com/node_12.x $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/nodesource.list >/dev/null
sudo apt-get update
sudo apt-get install nodejs
---------------
Requires minimum of gcc 8 (On Bionic, we need):
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt update
sudo apt install gcc-9 g++-9
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 7
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 7
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9
sudo update-alternatives --config gcc
sudo update-alternatives --config g++
gcc --version
g++ --version
---------------

cd ~/Qt/
tar -Jxvf ~/Downloads/software/Qt/6.5.3/qt-everywhere-src-6.5.3.tar.xz
mv qt-everywhere-src-6.5.3 6.5.3-src

## QTBUG-117950 Patch:
# NOTE: With libxkbcommon 1.6.0+, it's necessary to patch the source code
# https://bugreports.qt.io/browse/QTBUG-117950
# https://code.qt.io/cgit/qt/qtbase.git/commit/?id=8af35d27e8f02bbb99aef4ac495ed406e50e3cca
cd ~/Qt/6.5.3-src/qtbase
patch -p1 < ~/Documents/programs/Bible/KingJamesPureBibleSearch/patches/Qt/qtbug-117950.patch

## ASSIMP Bug Patch:
# https://github.com/assimp/assimp/issues/5072
# https://github.com/assimp/assimp/commit/253f8bfa621a9fa6cd2c36291cdaa8c60c99322c
cd ~/Qt/6.5.3-src/
patch -p1 < ~/Documents/programs/Bible/KingJamesPureBibleSearch/patches/Qt/Qt_6_assimp_253f8bf.patch

cd ~/Qt/
mkdir 6.5.3-build
cd 6.5.3-build

### With QtWebEngine: ###
# Note: It can't seem to find clang, even though libclang-dev is installed, unless we set LLVM_INSTALL_DIR (below on Focal):
export LLVM_INSTALL_DIR=/usr/lib/llvm-12/
../6.5.3-src/configure -release -opensource -confirm-license -prefix /home/dewhisna/Qt/6.5.3 -nomake examples -nomake tests -xcb-xlib -xcb -bundled-xcb-xinput -xkbcommon -flite -speechd -- -DFEATURE_clang=ON

### Skip QtWebEngine: ###
../6.5.3-src/configure -release -opensource -confirm-license -prefix /home/dewhisna/Qt/6.5.3 -nomake examples -nomake tests -xcb-xlib -xcb -bundled-xcb-xinput -xkbcommon -flite -speechd -skip qtwebengine -- -DFEATURE_clang=ON

cmake --build . --parallel
cmake --install .

Note: For QtWebEngine: node.js version 12+ is required as well as libxshmfence-dev

WARNING: Need LOTS of RAM to compile, even on a 2 Core CPU, especially for WebEngine.
8GB isn't even enough when running parallel on a 2 Core!  You can barely squeak by with
8GB if only building on a single core with nothing else running -- barely.

Note: Qt was broken with CMake >= 3.25.0 (but apparently fixed here in 6.5.3):
https://bugreports.qt.io/browse/QTBUG-109046



===============================================================================
===============================================================================

Building a Win32 Cross-Compiler:
--------------------------------

Download:  crosstool-ng-1.19.0.tar.bz2.md5
from:      http://crosstool-ng.org/download/crosstool-ng/

KJPBS checkout: trunk/support/crosstool


mkdir ~/xcompile
cd ~/xcompile
tar -jxvf crosstool-ng-1.19.0.tar.bz2.md5
cd crosstool-ng-1.19.0

sudo apt-get install automake
sudo apt-get install libncurses5-dev

./configure --prefix=/opt/crosstool
make
sudo make install
sudo cp ct-ng.dump /etc/bash_completion.d/

export PATH="${PATH}:/opt/crosstool/bin"

cd /opt/crosstool/lib/ct-ng.1.19.0/
patch -p1 < trunk/support/crosstool/crosstool-ng-1.19.0-fix.patch

cd ~/xcompile
mkdir src
mkdir build_i686-w64-mingw32
cd build_i686-w64-mingw32
cp trunk/support/crosstool/.config .
ct-ng menuconfig
ct-ng build

to Activate:
sudo ln -s ~/xcompile/i686-w64-mingw32 /opt/cross_win32


Well, it almost works...


===============================================================================
===============================================================================

This section is JUNK trying to figure out how to compile Qt for Android:
------------------------------------------------------------------------

Android 4.0.4 (replicant-sdk_linux-x86):
export ANDROID_API_VERSION=android-4.0.4
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export ANDROID_NDK_ROOT=~/android/android-ndk-r8d
export ANDROID_NDK_ROOT=~/android/android-ndk-r8b
export ANDROID_SDK_ROOT=~/android/replicant-sdk_linux-x86
Warning: Disabling pkg-config since PKG_CONFIG_LIBDIR is not set.
Warning: Disabling pkg-config since PKG_CONFIG_SYSROOT_DIR is not set.

../5.0.1-src-android/stable/configure -xplatform android-g++ -opensource -gui -widgets -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk ~/android/android-ndk-r8b -android-sdk ~/android/replicant-sdk_linux-x86 -android-toolchain-version 4.4.3



Warning: Disabling pkg-config since PKG_CONFIG_LIBDIR is not set.
Warning: Disabling pkg-config since PKG_CONFIG_SYSROOT_DIR is not set.

export ANDROID_API_VERSION=android-8
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export ANDROID_NDK_ROOT=~/android/android-ndk-r8b
export ANDROID_SDK_ROOT=~/android/android-sdks

export PKG_CONFIG_LIBDIR=~/android/android-ndk-r8b/prebuilt/linux-x86/lib/pkgconfig
export PKG_CONFIG_SYSROOT_DIR=~/android/android-ndk-r8b/prebuilt/linux-x86


../5.0.1-src-android/stable/configure -xplatform android-g++ -opensource -gui -widgets -qt-zlib -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk ~/android/android-ndk-r8b -android-sdk ~/android/android-sdks -android-toolchain-version 4.4.3


export ANDROID_API_VERSION=android-4.0.4
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r8b
export ANDROID_SDK_ROOT=/home/dewhisna/android/replicant-sdk_linux-x86

./configure -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8b -android-sdk /home/dewhisna/android/replicant-sdk_linux-x86 -android-toolchain-version 4.6 -nomake tests -nomake examples 


export ANDROID_API_VERSION=android-17
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r8b
export ANDROID_SDK_ROOT=/home/dewhisna/android/android-sdks

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8b -android-sdk /home/dewhisna/android/android-sdks -android-toolchain-version 4.6 -nomake tests -nomake examples

*******************************************************************************

===============================================================================
===============================================================================


Qt5.1 Android Build:
====================

************ THIS ONE WORKS, BUT ONLY SQL AS PLUGIN (LAST ONE): ***************

NOTE: Android only supports JDK 6.  It would build with JDK 7, but I don't know
if Qt uses the JDK 6 compat flag.  If not, that could explain some of the bizarre
random crashes and behaviour on the Android device

export ANDROID_API_VERSION=android-4.0.4
export JAVA_HOME=/usr/lib/jvm/java-6-openjdk-amd64
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r8e
export ANDROID_SDK_ROOT=/home/dewhisna/android/replicant-sdk_linux-x86

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/replicant-sdk_linux-x86 -nomake tests -nomake examples 

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -system-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/replicant-sdk_linux-x86 -nomake tests -nomake examples 

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -plugin-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/replicant-sdk_linux-x86 -nomake tests -nomake examples


************ THIS ONE WORKS, BUT ONLY SQL AS PLUGIN (LAST ONE): ***************

NOTE: Android only supports JDK 6.  It would build with JDK 7, but I don't know
if Qt uses the JDK 6 compat flag.  If not, that could explain some of the bizarre
random crashes and behaviour on the Android device

export ANDROID_API_VERSION=android-17
export JAVA_HOME=/usr/lib/jvm/java-6-openjdk-amd64
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r8e
export ANDROID_SDK_ROOT=/home/dewhisna/android/android-sdks

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -qt-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/android-sdks -nomake tests -nomake examples 

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -system-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/android-sdks -nomake tests -nomake examples 

./configure -developer-build -xplatform android-g++ -opensource -gui -widgets -qt-libpng -qt-libjpeg -plugin-sql-sqlite -android-ndk /home/dewhisna/android/android-ndk-r8e -android-sdk /home/dewhisna/android/android-sdks -nomake tests -nomake examples

===============================================================================
===============================================================================

Building wwWidgets:
===================

Qt 4.8.4 Linux (Local):
-----------------
/wwWidgets/widgets/widgets.pro :
Change:
	linux-g++:CONFIG(release, debug|release):QMAKE_STRIP = strip
To:
	linux-g++|linux-g++-64:CONFIG(release, debug|release):QMAKE_STRIP = strip

Change:
	linux-g++ {
	  CONFIG += debug_and_release separate_debug_info
	} else {
	  CONFIG += debug_and_release
	}

To:
	linux-g++|linux-g++-64 {
	  CONFIG += release static
	} else {
	  CONFIG += debug_and_release
	}

The problem was our mkspec isn't "linux-g++", it's "linux-g++-64", which confused this thing.  And, we built originally with "release static", not "debug_and_release" in "shared" mode.  The above is needed to get a ".a" static link library instead of the dynamic ".so" libraries.

Without this, our app will crash with a "QWidget: Must construct a QApplication before a QPaintDevice" error because of mixed build types.

After this, do normal:  qmake, make, make install to install these in the Qt install folder from which the qmake was built.


Qt 4.8.4 Linux (LSB, etc) and Qt 4.8.4 Mac
------------------------------------------
/wwWidgets/wwwidgets4.pro :
Change:
	SUBDIRS += widgets plugin
To:
	SUBDIRS += widgets
(avoids building Qt Developer plugins when you don't have tools)


Qt 4.8.4 win32 on Linux:
------------------------
/wwWidgets/widgets/widgets.pro :
In win32 { } section, add:
	QMAKE_LFLAGS += -shared
(without this, you get a WinMain not defined error on linking)

And in win32 { } section, change
	CONFIG += build_all
to:
	CONFIG += build_all dll
(or else it will make the output dll called libwwwidgets4.a instead of wwwidgets4.dll)


/wwWidgets/wwwidgets4.pro :
Change:
	SUBDIRS += widgets plugin
To:
	SUBDIRS += widgets
(avoids building Qt Developer plugins when you don't have tools)


Qt 4.8.4 Mac
------------
Strangely, I was completely unable to get it to build as a universal binary on its own.
It would only build with the native type of the specified compiler.  I was, however,
successful with manually building a 32-bit and 64-bit library and used lipo to stitch
them together:
For the Static build, use:
	CONFIG += static
For the dynamic "local" use build, use:
	CONFIG += debug_and_release

On the static libraries, stitch them together with:

lipo -create <path-to-32-bit-libwwwidgets4.a> <path-to-64-bit-libwwwidgets4.a> -output libwwwidgets4.a
After building, use "make install" and replace the <qt-path>/lib/libwwwidgets4.a with the new one


-------------------------------
wwWidgets with Qt 4.8.5 LSB 64:
-------------------------------
From wwWidgets checkout on our SourceForge version, do from ~/Qt:

Release:
--------
mkdir -p build-wwwidgets4-Qt_4_8_5_64_lsb/Release
cd build-wwwidgets4-Qt_4_8_5_64_lsb/Release
/usr/local/Trolltech/Qt-4.8.5-64-lsb/bin/qmake ../../wwWidgets/wwwidgets4.pro -r -spec linux-lsb-g++-64
make -w
sudo make install

Debug:
------
mkdir -p build-wwwidgets4-Qt_4_8_5_64_lsb/Debug
cd build-wwwidgets4-Qt_4_8_5_64_lsb/Debug
/usr/local/Trolltech/Qt-4.8.5-64-lsb/bin/qmake ../../wwWidgets/wwwidgets4.pro -r -spec linux-lsb-g++-64 CONFIG+=debug CONFIG+=declarative_debug
make -w
sudo make install


-------------------------------
wwWidgets with Qt 4.8.5 LSB 32:
-------------------------------
From wwWidgets checkout on our SourceForge version, do from ~/Qt:

Release:
--------
mkdir -p build-wwwidgets4-Qt_4_8_5_32_lsb/Release
cd build-wwwidgets4-Qt_4_8_5_32_lsb/Release
/usr/local/Trolltech/Qt-4.8.5-32-lsb/bin/qmake ../../wwWidgets/wwwidgets4.pro -r -spec linux-lsb-g++-32
make -w
sudo make install

Debug:
------
mkdir -p build-wwwidgets4-Qt_4_8_5_32_lsb/Debug
cd build-wwwidgets4-Qt_4_8_5_32_lsb/Debug
/usr/local/Trolltech/Qt-4.8.5-32-lsb/bin/qmake ../../wwWidgets/wwwidgets4.pro -r -spec linux-lsb-g++-32 CONFIG+=debug CONFIG+=declarative_debug
make -w
sudo make install



Qt 5.1.0
--------
Lots of porting changes... Will make patch file...


===============================================================================
===============================================================================

------------------------
Building qtstyleplugins:
------------------------

Mac 5.2.0-rc1-cocoa-static:
----------------------------

This now works with our modified version of qtstyleplugins so that we don't
link the qstylehelper.cpp file when building as a static library.  That's
needed for a dynamic plugin, but not static.  As static, we get duplicate
symbols between it and qt itself.

-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_2_0_rc1_cocoa_static
cd build-qtstyleplugins-5_2_0_rc1_cocoa_static
~/Qt/5.2.0-rc1-cocoa-static-run/bin/qmake CONFIG+=static CONFIG+=debug_and_release DEFINES+=QT_STATICPLUGIN ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----

For Reference:
~/Qt/5.2.0-rc1-cocoa-static-run/bin/qmake CONFIG+=static CONFIG+=debug_and_release QMAKE_CXXFLAGS+=-DQT_STATICPLUGIN ../qtstyleplugins/qtstyleplugins.pro



Linux 5.2.0-rc1-64-local (dynamicQt):
-------------------------------------

-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_2_0_rc1_64_local
cd build-qtstyleplugins-5_2_0_rc1_64_local
/usr/local/Trolltech/Qt-5.2.0-rc1-64-local/bin/qmake CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
sudo make install
-----


Android 5.2.0-rc1 (armeabi_v7a):
--------------------------------

-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_2_0_rc1_android_armeabi_v7a_gcc_4_8
cd build-qtstyleplugins-5_2_0_rc1_android_armeabi_v7a_gcc_4_8
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r9d
export ANDROID_SDK_ROOT=/home/dewhisna/android/android-sdks
~/Qt/5.2.0-rc1-android/5.2.0-rc1/android_armv7/bin/qmake -spec android-g++ CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Mac 5.2.0-cocoa-static:
-----------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_2_0_cocoa_static
cd build-qtstyleplugins-5_2_0_cocoa_static
~/Qt/5.2.0-cocoa-static-run/bin/qmake CONFIG+=static CONFIG+=debug_and_release DEFINES+=QT_STATICPLUGIN ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Mac 5.2.0-64-local:
-------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_2_0_64_local
cd build-qtstyleplugins-5_2_0_64_local
~/Qt/5.2.0-ios-android/5.2.0/clang_64/bin/qmake CONFIG+=static CONFIG+=debug_and_release ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Linux 5.2.0-64-local (dynamicQt):
-------------------------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_2_0_64_local
cd build-qtstyleplugins-5_2_0_64_local
/usr/local/Trolltech/Qt-5.2.0-64-local/bin/qmake CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
sudo make install
-----

-------------------------------------------------------------------------------

Linux 5.2.1-64-local (dynamicQt):
-------------------------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_2_1_64_local
cd build-qtstyleplugins-5_2_1_64_local
/usr/local/Trolltech/Qt-5.2.1-64-local/bin/qmake CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
sudo make install
-----


Mac 5.2.1-cocoa-static:
-----------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_2_1_cocoa_static
cd build-qtstyleplugins-5_2_1_cocoa_static
~/Qt/5.2.1-cocoa-static-run/bin/qmake CONFIG+=static CONFIG+=debug_and_release DEFINES+=QT_STATICPLUGIN ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Mac 5.2.1-64-local:
-------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_2_1_64_local
cd build-qtstyleplugins-5_2_1_64_local
~/Qt/5.2.1-ios/5.2.1/clang_64/bin/qmake CONFIG+=static CONFIG+=debug_and_release ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


-------------------------------------------------------------------------------

Linux 5.3.0-64-local (dynamicQt):
-------------------------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_0_64_local
cd build-qtstyleplugins-5_3_0_64_local
/usr/local/Trolltech/Qt-5.3.0-64-local/bin/qmake CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
sudo make install
-----


Android 5.3.0 (armeabi_v7a):
----------------------------

-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_0_android_armv7_gcc_4_8
cd build-qtstyleplugins-5_3_0_android_armv7_gcc_4_8
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r9d
export ANDROID_SDK_ROOT=/home/dewhisna/android/android-sdks
~/Qt/5.3.0-android/5.3/android_armv7/bin/qmake -spec android-g++ CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Android 5.3.0 (x86):
--------------------

-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_0_android_x86_gcc_4_8
cd build-qtstyleplugins-5_3_0_android_x86_gcc_4_8
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r9d
export ANDROID_SDK_ROOT=/home/dewhisna/android/android-sdks
~/Qt/5.3.0-android/5.3/android_x86/bin/qmake -spec android-g++ CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Mac 5.3.0-cocoa-static:
-----------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_0_cocoa_static
cd build-qtstyleplugins-5_3_0_cocoa_static
~/Qt/5.3.0-cocoa-static-run/bin/qmake CONFIG+=static CONFIG+=debug_and_release DEFINES+=QT_STATICPLUGIN ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Mac 5.3.0-64-local:
-------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_0_64_local
cd build-qtstyleplugins-5_3_0_64_local
~/Qt/5.3.0-ios/5.3/clang_64/bin/qmake CONFIG+=static CONFIG+=debug_and_release ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Windows 5.3.0-win32 (cross_win32):
----------------------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_0_win32
cd build-qtstyleplugins-5_3_0_win32
~/Qt/5.3.0-win32/bin/qmake CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


-------------------------------------------------------------------------------


Mac 5.3.1-64-local (dynamicQt):
-------------------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_1_64_local
cd build-qtstyleplugins-5_3_1_64_local
~/Qt/5.3.1-ios/5.3/clang_64/bin/qmake CONFIG+=debug_and_release ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Linux 5.3.1-64-local (dynamicQt):
-------------------------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_1_64_local
cd build-qtstyleplugins-5_3_1_64_local
/usr/local/Trolltech/Qt-5.3.1-64-local/bin/qmake CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
sudo make install
-----


Android 5.3.1 (armeabi_v7a):
----------------------------

-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_1_android_armv7_gcc_4_8
cd build-qtstyleplugins-5_3_1_android_armv7_gcc_4_8
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r9d
export ANDROID_SDK_ROOT=/home/dewhisna/android/android-sdks
~/Qt/5.3.1-android/5.3/android_armv7/bin/qmake -spec android-g++ CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Android 5.3.1 (x86):
--------------------

-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_1_android_x86_gcc_4_8
cd build-qtstyleplugins-5_3_1_android_x86_gcc_4_8
export ANDROID_NDK_ROOT=/home/dewhisna/android/android-ndk-r9d
export ANDROID_SDK_ROOT=/home/dewhisna/android/android-sdks
~/Qt/5.3.1-android/5.3/android_x86/bin/qmake -spec android-g++ CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Windows 5.3.1-win32-kubuntu (cross_win32):
------------------------------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_3_1_win32_kubuntu
cd build-qtstyleplugins-5_3_1_win32_kubuntu
~/Qt/5.3.1-win32-kubuntu/bin/qmake CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Windows 5.3.1-win32-mingw-dw2_4.8.0_rubenvb (cross_win32):
----------------------------------------------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5.3.1-win32-mingw-dw2_4.8.0_rubenvb
cd build-qtstyleplugins-5.3.1-win32-mingw-dw2_4.8.0_rubenvb
~/Qt/5.3.1-win32-mingw-dw2_4.8.0_rubenvb/bin/qmake CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


-------------------------------------------------------------------------------


Mac 5.5.0-alpha-ios (staticQt):
-------------------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_5_0_alpha_ios_staic
cd build-qtstyleplugins-5_5_0_alpha_ios_staic
~/Qt/5.5.0-alpha-ios-run/bin/qmake -spec macx-ios-clang CONFIG+=static CONFIG+=debug_and_release DEFINES+=QT_STATICPLUGIN ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----


Linux 5.5.0-gcc_64 (dynamicQt):
-------------------------------
-----
cd KingJamesPureBibleSearch/programs
mkdir build-qtstyleplugins-5_5_0_gcc_64
cd build-qtstyleplugins-5_5_0_gcc_64
~/Qt/5.5.0-android/5.5/gcc_64/bin/qmake CONFIG+=static CONFIG+=release CONFIG+=force-debug-info ../qtstyleplugins/qtstyleplugins.pro
make
make install
-----



===============================================================================
===============================================================================

------------------------
Building qt-speech:
------------------------

Linux 4.8.5-64-local (with server support):
-------------------------------------------
cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech
mkdir build-Qt-4.8.5-64-local
cd build-Qt-4.8.5-64-local
/usr/local/Trolltech/Qt-4.8.5-64-local/bin/qmake CONFIG+=debug CONFIG+=useserver ../QtSpeech-static.pro
make
make clean
/usr/local/Trolltech/Qt-4.8.5-64-local/bin/qmake CONFIG+=release CONFIG+=useserver ../QtSpeech-static.pro
make
make clean
cd /usr/local/Trolltech/Qt-4.8.5-64-local/lib/
sudo ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech/build-Qt-4.8.5-64-local/libQtSpeech.a libQtSpeech.a
sudo ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech/build-Qt-4.8.5-64-local/libQtSpeechd.a libQtSpeechd.a


Linux 4.8.5-32-lsb (with server support):
-----------------------------------------
cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech
mkdir build-Qt-4.8.5-32-lsb
cd build-Qt-4.8.5-32-lsb
/usr/local/Trolltech/Qt-4.8.5-32-lsb/bin/qmake CONFIG+=debug CONFIG+=useserver ../QtSpeech-static.pro -r -spec linux-lsb-g++-32
make
make clean
/usr/local/Trolltech/Qt-4.8.5-32-lsb/bin/qmake CONFIG+=release CONFIG+=useserver ../QtSpeech-static.pro -r -spec linux-lsb-g++-32
make
make clean
cd /usr/local/Trolltech/Qt-4.8.5-32-lsb/lib/
sudo ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech/build-Qt-4.8.5-32-lsb/libQtSpeech.a libQtSpeech.a
sudo ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech/build-Qt-4.8.5-32-lsb/libQtSpeechd.a libQtSpeechd.a

NOTE : Still need to figure out how to get Festival to compile under LSB!!!


Linux 5.3.1-64-local (with server support):
-------------------------------------------
cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech
mkdir build-Qt-5.3.1-64-local
cd build-Qt-5.3.1-64-local
/usr/local/Trolltech/Qt-5.3.1-64-local/bin/qmake CONFIG+=debug CONFIG+=useserver ../QtSpeech-static.pro
make
make clean
/usr/local/Trolltech/Qt-5.3.1-64-local/bin/qmake CONFIG+=release CONFIG+=useserver ../QtSpeech-static.pro
make
make clean
cd /usr/local/Trolltech/Qt-5.3.1-64-local/lib/
sudo ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech/build-Qt-5.3.1-64-local/libQtSpeech.a libQtSpeech.a
sudo ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech/build-Qt-5.3.1-64-local/libQtSpeechd.a libQtSpeechd.a

NOTE: Remove "CONFIG+=useserver" to build without Festival Client/Server support


Windows 5.3.1-64-local (from in cygwin):
----------------------------------------
Build QtSpeech-static.pro in QtCreator and copy libQtSpeech.lib, libQtSpeechd.lib, and
libQtSpeechd.pdb to the C:\Qt\5.3.1\lib folder


Mac 5.3.1-64-local:
-------------------
cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech
mkdir build-Qt-5.3.1-64-local
cd build-Qt-5.3.1-64-local
~/Qt/5.3.1-ios/5.3/clang_64/bin/qmake CONFIG+=debug ../QtSpeech-static.pro
make
make clean
~/Qt/5.3.1-ios/5.3/clang_64/bin/qmake CONFIG+=release ../QtSpeech-static.pro
make
make clean
cd ~/Qt/5.3.1-ios/5.3/clang_64/lib/
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech/build-Qt-5.3.1-64-local/libQtSpeech.a libQtSpeech.a
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech/build-Qt-5.3.1-64-local/libQtSpeech_debug.a libQtSpeech_debug.a


Linux 5.5.0-gcc_64 (with server support):
-----------------------------------------
cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech
mkdir build-Qt-5.5.0-gcc_64
cd build-Qt-5.5.0-gcc_64
~/Qt/5.5.0-android/5.5/gcc_64/bin/qmake CONFIG+=debug CONFIG+=useserver ../QtSpeech-static.pro
make
make clean
~/Qt/5.5.0-android/5.5/gcc_64/bin/qmake CONFIG+=release CONFIG+=useserver ../QtSpeech-static.pro
make
make clean
cd ~/Qt/5.5.0-android/5.5/gcc_64/lib/
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech/build-Qt-5.5.0-gcc_64/libQtSpeech.a libQtSpeech.a
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/qt-speech/build-Qt-5.5.0-gcc_64/libQtSpeechd.a libQtSpeechd.a

NOTE: Remove "CONFIG+=useserver" to build without Festival Client/Server support



===============================================================================
===============================================================================

-----------------------
Qt Source Dependencies:
-----------------------

In the Qt Install folder ($$[QT_INSTALL_PREFIX]), the following must be copied
and/or installed from the Qt Source folder in order to provide a common place
for these to be located.  The target names were derived from the Qt 4.8.x source
where we started our application, and have been maintained through Qt 5 for
consistency rather than dealing with the new module subfolder structures:

For Qt 4.8.x
------------
cd $$[QT_INSTALL_PREFIX]
mkdir -p src/3rdparty
cd src/3rdparty/
cp -r <Qt-Source-Folder>/src/3rdparty/zlib* .
cd $$[QT_INSTALL_PREFIX]
mkdir -p src/gui/mac/qt_menu.nib
cd src/gui/mac/qt_menu.nib/
cp <Qt-Source-Folder>/src/gui/mac/qt_menu.nib/* .


For Qt 5.x.x
------------
cd $$[QT_INSTALL_PREFIX]
mkdir -p src/3rdparty
cd src/3rdparty/
cp -r <Qt-Source-Folder>/qtbase/src/3rdparty/zlib* .
cd $$[QT_INSTALL_PREFIX]
mkdir -p src/gui/mac/qt_menu.nib
cd src/gui/mac/qt_menu.nib
cp <Qt-Source-Folder>/qtbase/src/plugins/platforms/cocoa/qt_menu.nib/* .


===============================================================================
===============================================================================

=================================
Emscripten-Qt (4.8.4 equivalent):
=================================

http://vps2.etotheipiplusone.com:30176/redmine/projects/emscripten-qt/wiki
http://vps2.etotheipiplusone.com:30176/redmine/projects/emscripten-qt/wiki/Demos

https://emscripten.org
https://github.com/kripken/emscripten/wiki
https://github.com/kripken/emscripten/wiki/Tutorial
https://github.com/kripken/emscripten


Requires:
---------
llvm and clang 3.2 (sudo apt-get install llvm clang)
nodejs 0.6.19 (sudo apt-get install nodejs)
node 0.10.24 (download from nodejs.org and install to system) (http://nodejs.org/)


Native build also requires SDL:
------------------------------
sudo apt-get install libsdl-net1.2 libsdl-image1.2 libsdl.1.2debian  (possibly others -- I lost count)


Cleaning up old installations:
------------------------------
rm ~/.emscripten
rm -r ~/.emscripten_cache/
rm ~/.emscripten_sanity


Code Checkout:
--------------
mkdir ~/emscripten
cd ~/emscripten
git clone https://github.com/kripken/emscripten.git emscripten              (SEE NOTES BELOW)
use:  git clone -b 1.5.1 https://github.com/kripken/emscripten.git emscripten
git clone git://gitorious.org/qt/emscripten-qt.git


Emscripten Notes and Issues:
----------------------------

See:  https://github.com/kripken/emscripten/issues/2003

Note: Emscripten 1.8.2 (the latest at the time of this writing) has optimization code bugs
that breaks emscripten-qt!! Such as the following code from QPngHandlerPrivate::readPngImage
in src/gui/image/qpnghandler.cpp:

 // sanity check palette entries 
    if (color_type == PNG_COLOR_TYPE_PALETTE 
        && outImage->format() == QImage::Format_Indexed8) { 
        int color_table_size = outImage->colorCount(); 
        for (int y=0; y<(int)height; ++y) { 
            uchar *p = FAST_SCAN_LINE(data, bpl, y); 
            uchar *end = p + width;
            while (p < end) {
                if (*p >= color_table_size)
                    *p = 0;
                ++p;
            }
        }
    }


Emscripten incorrectly generates:

    // sanity check palette entries 
    if (color_type == PNG_COLOR_TYPE_PALETTE 
        && outImage->format() == QImage::Format_Indexed8) { 
        int color_table_size = outImage->colorCount(); 
        for (int y=0; y<(int)height; ++y) { 
            uchar *p = FAST_SCAN_LINE(data, bpl, y); 
            while (p < p + width) {
                if (*p >= color_table_size)
                    *p = 0;
                ++p;
            }
        }
    }


Note:  Emscripten 1.6.4 is also bad
Note:  Emscripten 1.5.7 is also bad
Note:  Emscripten 1.5.6 is also bad
Note:  Emscripten 1.5.5 is also bad
Note:  Emscripten 1.5.4 is also bad
Note:  Emscripten 1.5.3 is also bad -- but almost comes up (displays debug log and derives bad configuration paths)
Note:  Emscripten 1.5.2 is also bad -- but almost comes up
Note:  Emscripten 1.5.1 <<<--- WORKS!!
Note:  Emscripten 1.5.0 Works! (mostly)
Note:  Emscripten 1.4.2 Works! (mostly)
Note:  Emscripten 1.3.8 Works! (mostly)



Configure and Test:
-------------------
cd emscripten

clang tests/hello_world.cpp
./a.out

nodejs tests/hello_world.js

./emcc           (first run builds ~/.emscripten setup file!!)

./emcc tests/hello_world.cpp
node a.out.js

./emcc tests/hello_world_sdl.cpp -o hello.html

./emcc tests/hello_world_file.cpp -o hello.html --preload-file tests/hello_world_file.txt

cd test
../emcc hello_image_sdl.c --preload-file screenshot.jpg -o a.html



Building Emscripten-Qt:
=======================

For all:
export EMSCRIPTEN_ROOT_PATH=/home/dewhisna/emscripten/emscripten


--------------
Generic Build:
--------------

cd ~/emscripten
mkdir build-emscripten-qt
cd build-emscripten-qt

----------------------------------

Without SQL (Debug, no freetype):
---------------------------------
*******************************************************************************
NOTE: This is the production release we are using for final KJPBS Build!!!
*******************************************************************************
../emscripten-qt/configure -xplatform qws/emscripten-clang  -embedded emscripten -static -stl -opensource -debug  -no-qt3support -no-opengl -no-openssl -system-zlib -no-gif -qt-zlib -qt-libpng -no-libmng -no-libtiff -qt-libjpeg -no-accessibility -dbus -script -no-fpu -no-mmx -no-3dnow -no-sse -no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 -no-icu -no-rpath  -confirm-license -no-webkit -no-phonon -no-freetype -nomake demos -nomake examples -little-endian -no-feature-socket  -no-feature-codecs -no-feature-textcodecplugin -no-feature-systemlocale  -no-feature-qws_multiprocess -no-feature-sound    -no-feature-printpreviewwidget  -no-feature-printpreviewdialog  -no-feature-systemsemaphore -no-feature-sharedmemory -no-feature-localeventloop -feature-qws_clientblit -feature-qws_cursor  -depths 32 -make tools  --prefix=$(pwd)/install


make sub-tools-bootstrap && make install_qmake sub-moc-install_subtargets sub-uic-install_subtargets sub-rcc-install_subtargets && make  sub-corelib-install_subtargets sub-gui-install_subtargets sub-xml-install_subtargets install_mkspecs

----------------------------------

Without SQL (Debug, with freetype):
-----------------------------------
../emscripten-qt/configure -xplatform qws/emscripten-clang  -embedded emscripten -static -stl -opensource -debug  -no-qt3support -no-opengl -no-openssl -system-zlib -no-gif -qt-zlib -qt-libpng -no-libmng -no-libtiff -qt-libjpeg -no-accessibility -dbus -script -no-fpu -no-mmx -no-3dnow -no-sse -no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 -no-icu -no-rpath  -confirm-license -no-webkit -no-phonon -qt-freetype -fontconfig -nomake demos -nomake examples -little-endian -no-feature-socket  -no-feature-codecs -no-feature-textcodecplugin -no-feature-systemlocale  -no-feature-qws_multiprocess -no-feature-sound    -no-feature-printpreviewwidget  -no-feature-printpreviewdialog  -no-feature-systemsemaphore -no-feature-sharedmemory -no-feature-localeventloop -feature-qws_clientblit -feature-qws_cursor  -depths 32 -make tools  --prefix=$(pwd)/install


make sub-tools-bootstrap && make install_qmake sub-moc-install_subtargets sub-uic-install_subtargets sub-rcc-install_subtargets && make  sub-corelib-install_subtargets sub-gui-install_subtargets sub-xml-install_subtargets install_mkspecs


----------------------------------

Without SQL (Release, with freetype):
-------------------------------------
../emscripten-qt/configure -xplatform qws/emscripten-clang  -embedded emscripten -static -stl -opensource -release  -no-qt3support -no-opengl -no-openssl -system-zlib -no-gif -qt-zlib -qt-libpng -no-libmng -no-libtiff -qt-libjpeg -no-accessibility -dbus -script -no-fpu -no-mmx -no-3dnow -no-sse -no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 -no-icu -no-rpath  -confirm-license -no-webkit -no-phonon -qt-freetype -fontconfig -nomake demos -nomake examples -little-endian -no-feature-socket  -no-feature-codecs -no-feature-textcodecplugin -no-feature-systemlocale  -no-feature-qws_multiprocess -no-feature-sound    -no-feature-printpreviewwidget  -no-feature-printpreviewdialog  -no-feature-systemsemaphore -no-feature-sharedmemory -no-feature-localeventloop -feature-qws_clientblit -feature-qws_cursor  -depths 32 -make tools  --prefix=$(pwd)/install


make sub-tools-bootstrap && make install_qmake sub-moc-install_subtargets sub-uic-install_subtargets sub-rcc-install_subtargets && make  sub-corelib-install_subtargets sub-gui-install_subtargets sub-xml-install_subtargets install_mkspecs

----------------------------------

With SQL:
---------
../emscripten-qt/configure -xplatform qws/emscripten-clang  -embedded emscripten -static -stl -opensource -debug  -no-qt3support -no-opengl -no-openssl -qt-sql-sqlite  -system-zlib -no-gif -qt-zlib -qt-libpng -no-libmng -no-libtiff -qt-libjpeg -no-accessibility -dbus -script -no-fpu -no-mmx -no-3dnow -no-sse -no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 -no-icu -no-rpath  -confirm-license -no-webkit -no-phonon -no-freetype -nomake demos -nomake examples -little-endian -no-feature-socket  -no-feature-codecs -no-feature-textcodecplugin -no-feature-systemlocale  -no-feature-qws_multiprocess -no-feature-sound    -no-feature-printpreviewwidget  -no-feature-printpreviewdialog  -no-feature-systemsemaphore -no-feature-sharedmemory -no-feature-localeventloop -feature-qws_clientblit -feature-qws_cursor  -depths 32 -make tools  --prefix=$(pwd)/install


make sub-tools-bootstrap && make install_qmake sub-moc-install_subtargets sub-uic-install_subtargets sub-rcc-install_subtargets && make  sub-corelib-install_subtargets sub-gui-install_subtargets sub-sql-install_subtargets sub-xml-install_subtargets install_mkspecs

----------------------------------


(optional optimization):
for i in qcosmeticstroker qdrawhelper qgrayraster; do opt -O3 src/gui/.obj/debug-static-emb-emscripten/$i.o > tmp-llvm-$i.o; mv tmp-llvm-$i.o src/gui/.obj/debug-static-emb-emscripten/$i.o; done && make  sub-corelib-install_subtargets sub-gui-install_subtargets 



-------------
Native Build:
-------------

export EMSCRIPTEN_USE_AR_FOR_STATIC_LIBRARIES=yes
(the above export is also needed on your local app builds!!)

cd ~/emscripten
mkdir build-emscripten-qt-native
cd build-emscripten-qt-native

../emscripten-qt/configure -xplatform qws/emscripten-clang-native  -embedded emscripten -static -opensource -debug  -no-qt3support -no-opengl -no-openssl -qt-sql-sqlite  -system-zlib -no-gif -qt-zlib -qt-libpng -no-libmng -no-libtiff -qt-libjpeg -no-accessibility -dbus -script -no-fpu -no-mmx -no-3dnow -no-sse -no-sse2 -no-sse3 -no-ssse3 -no-sse4.1 -no-sse4.2 -no-icu -no-rpath  -confirm-license -no-webkit -no-phonon -no-freetype -nomake demos -nomake examples -little-endian -no-feature-socket  -no-feature-codecs -no-feature-textcodecplugin -no-feature-systemlocale  -no-feature-qws_multiprocess -no-feature-sound    -no-feature-printpreviewwidget  -no-feature-printpreviewdialog  -no-feature-systemsemaphore -no-feature-sharedmemory -no-feature-localeventloop -feature-qws_clientblit -feature-qws_cursor  -depths 32 -make tools  --prefix=$(pwd)/install


make sub-tools-bootstrap && make install_qmake sub-moc-install_subtargets sub-uic-install_subtargets sub-rcc-install_subtargets && make  sub-corelib-install_subtargets sub-gui-install_subtargets sub-sql-install_subtargets sub-xml-install_subtargets install_mkspecs


Note: The optimization shown for the Generic Build doesn't work for Native Build!



Building Chips Demo (Generic):
==============================

export EMSCRIPTEN_ROOT_PATH=/home/dewhisna/emscripten/emscripten

cd ~/emscripten    (apps won't build under the build-emscripten-qt folder)
mkdir qtdemos
cd qtdemos
cp -R ../emscripten-qt/demos/chip .
cd chip
patch main.cpp < ../../emscripten-qt/emscripten-stuff/chip-emscripten-qt-patch.patch
cd ..
mkdir build-chip
cd build-chip
~/emscripten/build-emscripten-qt/install/bin/qmake ../chip/chip.pro -spec qws/emscripten-clang
make

mkdir -p qt-fonts && cp ../../build-emscripten-qt/install/lib/fonts/helvetica_*.qpf ../../build-emscripten-qt/install/lib/fonts/fixed_*.qpf qt-fonts/
cp ../../build-emscripten-qt/install/lib/QtGui.a QtGui.so
cp ../../build-emscripten-qt/install/lib/QtCore.a QtCore.so

../../emscripten/emcc \
  chip.bc \
  QtGui.so QtCore.so \
  -O2 \
  --closure 0 \
  --jcache \
  --pre-js ../../emscripten-qt/emscripten-stuff/pre-qt.js \
  --js-library ../../emscripten-qt/emscripten-stuff/pre-qt-library.js \
  --embed-file qt-fonts \
  -s EXPORTED_FUNCTIONS="['_main', '_EMSCRIPTENQT_resetTimerCallback', '_EMSCRIPTENQT_timerCallback', '_EMSCRIPTENQT_timerCallback_springboard', '_EMSCRIPTENQT_canvas_width_pixels', '_EMSCRIPTENQT_canvas_height_pixels', '_EMSCRIPTENQT_mouseCanvasPosChanged', '_EMSCRIPTENQT_mouseCanvasButtonChanged']" \
  -s TOTAL_MEMORY=67108864 \
  -s INLINING_LIMIT=50 \
  -o chip.html 

Info from Simon's website:
A brief explanation of the arguments:
    chip.bc is of course the llvm bitcode file that we want to convert to Javascript;
    then we provide the paths to QtCore.a and QtGui.a, which are the bitcode libraries we created when we compiled emscripten-qt;
    -O2 is the optimisation level;
    --closure 0 disables Google's "Closure" compiler as it currently seems to generate incorrect code with emscripten-qt;
    --jcache just tells emcc to cache the results so hopefully things will go faster should we want to compile this again;
    --pre-qt.js contains a bunch of Javascript helpers for interfacing with the canvas (flushing the QWS framebuffer to it; passing canvas mouse events to QWS; setting up the single font file provided with emscripten-qt; etc);
    --embed-file qt-fonts adds the fonts that we just copied over - note that the directory name "qt-fonts" is important here, as emscripten-qt is hardcoded to look for fonts stored in a directory called "qt-fonts";
    -s EXPORTED_FUNCTIONS is something that will hopefully be useful to us when/ if I figure out how to get Closure working with emscripten-qt;
    -s TOTAL_MEMORY sets the amount of "simulated" memory that will be allotted to the app when it runs; the "chip" demo takes up a fair bit of RAM, and Emscripten in asm.js mode requires RAM to be a power of 2, so we allocate ~64MB to be on the safe side; and
    chip.html will be the web page containing the converted Javascript + canvas version of the chips demo that we can run in a browser.


NOTE: Simon's website has a few errors in the commands listed above, such as wrong export
names for the canvas_width_pixels and canvas_height_pixels functions, etc...  Compare!!


Building Chips Demo (Native):
=============================

export EMSCRIPTEN_ROOT_PATH=/home/dewhisna/emscripten/emscripten
export EMSCRIPTEN_USE_AR_FOR_STATIC_LIBRARIES=yes

cd ~/emscripten    (apps won't build under the build-emscripten-qt folder)
mkdir qtdemos
cd qtdemos
cp -R ../emscripten-qt/demos/chip .
cd chip
patch main.cpp < ../../emscripten-qt/emscripten-stuff/chip-emscripten-qt-patch.patch
cd ..
mkdir build-chip-native
cd build-chip-native
~/emscripten/build-emscripten-qt-native/install/bin/qmake ../chip/chip.pro -spec qws/emscripten-clang-native
make



The above 'make' fails I think because of the "EMSCRIPTEN_USE_AR_FOR_STATIC_LIBRARIES" flag.
Doing the following lets it build to a .a file, but the final build step, while it succeeds
(with a couple of tweaks), fails to produce code that actually does anything:
~/emscripten/build-emscripten-qt-native/install/bin/qmake ../chip/chip.pro -spec qws/emscripten-clang-native TEMPLATE=lib QMAKE_CXXFLAGS+=-fPIC QMAKE_CXXFLAGS+=-static CONFIG+=static
make
??????????





mkdir -p qt-fonts && cp ../../build-emscripten-qt-native/install/lib/fonts/helvetica_*.qpf ../../build-emscripten-qt-native/install/lib/fonts/fixed_*.qpf qt-fonts/
cp ../../build-emscripten-qt-native/install/lib/QtGui.a QtGui.so
cp ../../build-emscripten-qt-native/install/lib/QtCore.a QtCore.so

../../emscripten/emcc \
  chip.bc \
  QtGui.so QtCore.so \
  -O2 \
  --closure 0 \
  --jcache \
  --pre-js ../../emscripten-qt/emscripten-stuff/pre-qt.js \
  --js-library ../../emscripten-qt/emscripten-stuff/pre-qt-library.js \
  --embed-file qt-fonts \
  -s EXPORTED_FUNCTIONS="['_main', '_EMSCRIPTENQT_resetTimerCallback', '_EMSCRIPTENQT_timerCallback', '_EMSCRIPTENQT_timerCallback_springboard', '_EMSCRIPTENQT_canvas_width_pixels', '_EMSCRIPTENQT_canvas_height_pixels', '_EMSCRIPTENQT_mouseCanvasPosChanged', '_EMSCRIPTENQT_mouseCanvasButtonChanged']" \
  -s TOTAL_MEMORY=67108864 \
  -s INLINING_LIMIT=50 \
  -o chip.html 


Building KJPBS for Emscripten (Generic):
========================================

export EMSCRIPTEN_ROOT_PATH=/home/dewhisna/emscripten/emscripten

<Build in QtCreator>

cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/build-KJVCanOpener-Qt_4_8_4_emscripten/Debug (or Release)

mkdir -p qt-fonts && cp ~/emscripten/build-emscripten-qt/install/lib/fonts/helvetica_*.qpf ~/emscripten/build-emscripten-qt/install/lib/fonts/fixed_*.qpf qt-fonts/
cp ~/emscripten/build-emscripten-qt/install/lib/QtGui.a QtGui.so
cp ~/emscripten/build-emscripten-qt/install/lib/QtCore.a QtCore.so
cp ~/emscripten/build-emscripten-qt/install/lib/QtSql.a QtSql.so
cp ~/emscripten/build-emscripten-qt/install/lib/QtXml.a QtXml.so

mkdir -p data
cp ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/db/kjvtext.s3db data/


(Inline):
---------
$EMSCRIPTEN_ROOT_PATH/emcc \
  KingJamesPureBibleSearch.bc \
  QtGui.so QtCore.so QtSql.so QtXml.so \
  -O2 \
  --closure 0 \
  --jcache \
  --pre-js $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt.js \
  --js-library $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt-library.js \
  --embed-file qt-fonts \
  --embed-file data \
  -s EXPORTED_FUNCTIONS="['_main', '_EMSCRIPTENQT_resetTimerCallback', '_EMSCRIPTENQT_timerCallback', '_EMSCRIPTENQT_timerCallback_springboard', '_EMSCRIPTENQT_canvas_width_pixels', '_EMSCRIPTENQT_canvas_height_pixels', '_EMSCRIPTENQT_mouseCanvasPosChanged', '_EMSCRIPTENQT_mouseCanvasButtonChanged']" \
  -s TOTAL_MEMORY=1073741824 \
  -s INLINING_LIMIT=50 \
  -o KingJamesPureBibleSearch.html


(Preload):
----------
$EMSCRIPTEN_ROOT_PATH/emcc \
  KingJamesPureBibleSearch.bc \
  QtGui.so QtCore.so QtSql.so QtXml.so \
  -O2 \
  --closure 0 \
  --jcache \
  --pre-js $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt.js \
  --js-library $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt-library.js \
  --embed-file qt-fonts \
  --preload-file data/kjvtext.s3db \
  -s EXPORTED_FUNCTIONS="['_main', '_EMSCRIPTENQT_resetTimerCallback', '_EMSCRIPTENQT_timerCallback', '_EMSCRIPTENQT_timerCallback_springboard', '_EMSCRIPTENQT_canvas_width_pixels', '_EMSCRIPTENQT_canvas_height_pixels', '_EMSCRIPTENQT_mouseCanvasPosChanged', '_EMSCRIPTENQT_mouseCanvasButtonChanged']" \
  -s TOTAL_MEMORY=1073741824 \
  -s INLINING_LIMIT=50 \
  -o KingJamesPureBibleSearch.html


(No SQL):
---------
*******************************************************************************
NOTE: This is the production release we are using for final KJPBS Build!!!
*******************************************************************************
cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/build-KJVCanOpener-Qt_4_8_4_emscripten/Debug (or Release)

mkdir -p qt-fonts && cp ~/emscripten/build-emscripten-qt/install/lib/fonts/helvetica_*.qpf ~/emscripten/build-emscripten-qt/install/lib/fonts/fixed_*.qpf qt-fonts/

cp ~/emscripten/build-emscripten-qt/install/lib/fonts/DejaVuSans.ttf qt-fonts/
cp ~/emscripten/build-emscripten-qt/install/lib/fonts/DejaVuSerif-BoldOblique.ttf qt-fonts/
cp ~/emscripten/build-emscripten-qt/install/lib/fonts/DejaVuSerif-Bold.ttf qt-fonts/
cp ~/emscripten/build-emscripten-qt/install/lib/fonts/DejaVuSerif-Oblique.ttf qt-fonts/
cp ~/emscripten/build-emscripten-qt/install/lib/fonts/DejaVuSerif.ttf qt-fonts/

cp ~/emscripten/build-emscripten-qt/install/lib/QtGui.a QtGui.so
cp ~/emscripten/build-emscripten-qt/install/lib/QtCore.a QtCore.so
cp ~/emscripten/build-emscripten-qt/install/lib/QtXml.a QtXml.so

mkdir -p data
cp ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/db/kjvtext.ccdb data/

$EMSCRIPTEN_ROOT_PATH/emcc \
  KingJamesPureBibleSearch.bc \
  QtGui.so QtCore.so QtXml.so \
  -O2 \
  --closure 0 \
  --jcache \
  --pre-js $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt.js \
  --js-library $EMSCRIPTEN_ROOT_PATH/../emscripten-qt/emscripten-stuff/pre-qt-library.js \
  --embed-file qt-fonts \
  --preload-file data \
  -s EXPORTED_FUNCTIONS="['_main', '_EMSCRIPTENQT_resetTimerCallback', '_EMSCRIPTENQT_timerCallback', '_EMSCRIPTENQT_timerCallback_springboard', '_EMSCRIPTENQT_canvas_width_pixels', '_EMSCRIPTENQT_canvas_height_pixels', '_EMSCRIPTENQT_mouseCanvasPosChanged', '_EMSCRIPTENQT_mouseCanvasButtonChanged', '_EMSCRIPTENQT_attemptedLocalEventLoop']" \
  -s TOTAL_MEMORY=134217728 \
  -s INLINING_LIMIT=50 \
  -s ALIASING_FUNCTION_POINTERS=0 \
  -o KingJamesPureBibleSearch.html


Memory Sizes:
134217728 <<< This is sufficient event for our worst case [a-z]* search
268435456
536870912
1073741824
2147483648 <<< this one doesn't work at all (probably too big)

https://github.com/kripken/emscripten/wiki/CodeGuidelinesAndLimitations#function-pointer-issues

References:
-s VERBOSE=1
-s ALIASING_FUNCTION_POINTERS=0

===============================================================================
===============================================================================

Emscripten Warnings when building SQL with original SQLite3 Module
(These were fixed by changing emscripten-qt/src/3rdparty/sqlite/sqlite.c
to emscripten-qt/src/3rdparty/sqlite/sqlite.cpp and editing all casts, etc
to be C++ format and undating the sqlite.pri file accordingly)
===============================================================

Warning: Casting potentially incompatible function pointer i32 (i8*, i32, i32)* to void ()*, for posixOpen
Warning: See https://github.com/kripken/emscripten/wiki/CodeGuidlinesAndLimitations#function-pointer-issues for more information on dangerous function pointer casts
Warning: Incompatible function pointer casts are very dangerous with ASM_JS=1, you should investigate and correct these
Warning: Casting potentially incompatible function pointer i32 (i32)* to void ()*, for close
Warning: Casting potentially incompatible function pointer i32 (i8*, i32)* to void ()*, for access
Warning: Casting potentially incompatible function pointer i8* (i8*, i32)* to void ()*, for getcwd
Warning: Casting potentially incompatible function pointer i32 (i8*, %struct.stat*)* to void ()*, for stat
Warning: Casting potentially incompatible function pointer i32 (i32, %struct.stat*)* to void ()*, for fstat
Warning: Casting potentially incompatible function pointer i32 (i32, i32)* to void ()*, for ftruncate
Warning: Casting potentially incompatible function pointer i32 (i32, i32, ...)* to void ()*, for fcntl
Warning: Casting potentially incompatible function pointer i32 (i32, i8*, i32)* to void ()*, for read
Warning: Casting potentially incompatible function pointer i32 (i32, i8*, i32)* to void ()*, for write


Warning: Casting potentially incompatible function pointer void (%struct.sqlite3*, i8*)* to void (i8*)*, for sqlite3DbFree
Warning: See https://github.com/kripken/emscripten/wiki/CodeGuidlinesAndLimitations#function-pointer-issues for more information on dangerous function pointer casts
Warning: Incompatible function pointer casts are very dangerous with ASM_JS=1, you should investigate and correct these

===============================================================================
===============================================================================

Emscripten Warnings when building Freetype font support
===============================================================

warning: Casting potentially incompatible function pointer i32 (%struct.FT_SizeRec_.36025*)* to i32 (%struct.FT_SizeRec_.36025*, i32)*, for FNT_Size_Select
warning: See https://github.com/kripken/emscripten/wiki/CodeGuidelinesAndLimitations#function-pointer-issues for more information on dangerous function pointer casts
warning: Incompatible function pointer casts are very dangerous with ASM_JS=1, you should investigate and correct these
warning: Casting potentially incompatible function pointer i32 (%struct.PS_UnicodesRec_*)* to i32 (%struct.FT_CMapRec_.30283*, i8*)*, for t1_cmap_unicode_init
warning: Casting potentially incompatible function pointer i32 (%struct.T1_CMapStdRec_*)* to i32 (%struct.FT_CMapRec_.30283*, i8*)*, for t1_cmap_standard_init
warning: Casting potentially incompatible function pointer i32 (%struct.T1_CMapStdRec_*)* to i32 (%struct.FT_CMapRec_.30283*, i8*)*, for t1_cmap_expert_init
warning: Casting potentially incompatible function pointer i32 (%struct.T1_CMapCustomRec_*)* to i32 (%struct.FT_CMapRec_.30283*, i8*)*, for t1_cmap_custom_init
warning: Casting potentially incompatible function pointer i32 (%struct.PFR_CMapRec_*)* to i32 (%struct.FT_CMapRec_.30038*, i8*)*, for pfr_cmap_init
warning: Casting potentially incompatible function pointer void (%struct.TRaster_.35561*, i32, i8*)* to i32 (%struct.FT_RasterRec_*, i32, i8*)*, for ft_black_set_mode
warning: Casting potentially incompatible function pointer i32 (%struct.FNT_CMapRec_*)* to i32 (%struct.FT_CMapRec_.36055*, i8*)*, for fnt_cmap_init
warning: Casting potentially incompatible function pointer i32 (%struct.CID_FaceRec_*, %struct.CID_Parser_*)* to void (%struct.FT_FaceRec_.35885*, i8*)*, for parse_fd_array
warning: Casting potentially incompatible function pointer i32 (%struct.CID_FaceRec_*, %struct.CID_Parser_*)* to void (%struct.FT_FaceRec_.35885*, i8*)*, for parse_font_matrix19192
warning: Casting potentially incompatible function pointer i32 (%struct.CID_FaceRec_*, %struct.CID_Parser_*)* to void (%struct.FT_FaceRec_.35885*, i8*)*, for parse_expansion_factor
warning: Casting potentially incompatible function pointer i32 (%struct.PS_UnicodesRec_.36202*)* to i32 (%struct.FT_CMapRec_.36189*, i8*)*, for cff_cmap_unicode_init
warning: Casting potentially incompatible function pointer i32 (%struct.CFF_CMapStdRec_*)* to i32 (%struct.FT_CMapRec_.36189*, i8*)*, for cff_cmap_encoding_init
warning: Casting potentially incompatible function pointer i32 (%struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*)* to i32 (%struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_ScriptMetricsRec_*)*, for af_dummy_hints_apply


===============================================================================
===============================================================================

------------------------
Setting up EC2 instance:
------------------------

sudo apt-get update
sudo apt-get install joe
sudo apt-get install build-essential
sudo apt-get install gpg apt-transport-https wget
wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null
sudo apt-get update
sudo apt-get install cmake ninja-build
sudo apt-get build-dep libqt4-dev		<<< build-dep not install! <<<  Use "qt4-x11" on 18.04 Bionic
sudo apt-get install gperf bison
sudo apt-get install libxcb1 libxcb1-dev libx11-xcb1 libx11-xcb-dev libxcb-keysyms1 libxcb-keysyms1-dev libxcb-image0 libxcb-image0-dev libxcb-shm0 libxcb-shm0-dev libxcb-icccm4 libxcb-icccm4-dev libxcb-sync1 libxcb-sync-dev libxcb-xfixes0-dev libxrender-dev libxcb-shape0-dev
sudo apt-get install checkinstall libc6-dev libexpat1-dev libgl1-mesa-dev libqt4-dev libavcodec-dev libavutil-dev		<<< Needed on Desktop GUI devel only for 18.04 Bionic?
sudo apt-get install perl python
sudo apt-get install binfmt-support
sudo apt-get install libwww-perl libdatetime-perl
sudo apt-get install libfreetype6-dev fontconfig
sudo apt-get install libjpeg-dev
sudo apt-get install zlib1g zlib1g-dev
sudo apt-get install libssl-dev			## See below for 18.04 Bionic!
sudo apt-get install libssl1.0-dev		## <<<<<<<<< Qt 4.8.7 (and maybe 5.5.0) needs OpenSSL 1.0.x API/ABI NOT the newer 1.1.x on 18.04 Bionic!!
### <<<<<<<<<<<<<<<<  BUT: libmysqlclient-dev needed for MediaDrop requires the newer libssl-dev package!
### <<<<<<<<<<<<<<<<	The workaround is to first install libssl1.0-dev, build Qt 4.8.7 for VNC (and other
### <<<<<<<<<<<<<<<<	necessary Qt packages), then switch from libssl1.0-dev to libssl-dev and install
### <<<<<<<<<<<<<<<<	MySQL and MediaDrop.  And similarly ffmpeg needs libssl1.0-dev (not sure if it works
### <<<<<<<<<<<<<<<<	with newer or not.  This works, because once it's compiled, we can still have both
### <<<<<<<<<<<<<<<<	libssl1.0.0 and libssl1.1 binary packages installed simultaneously.  The swap of the
### <<<<<<<<<<<<<<<<	dev package is only needed for compiling purposes.
### <<<<<<<<<<<<<<<<	Note: for older Qts, there should be a patch from KDE to allow it to build/work with libssl1.1
sudo apt-get install pkg-config
sudo apt-get install patch patchutils
sudo apt-get install p7zip p7zip-full
sudo apt-get install unzip zip
sudo apt-get install subversion
sudo apt-get install git git-svn
sudo apt-get install xrdp
sudo apt-get install xfce4
sudo apt-get install apache2 apache2-doc apache2-suexec-pristine apache2-suexec-custom apache2-utils
sudo apt-get install autocutsel           ## <<<< This one isn't really needed!
sudo apt-get install apt-file
sudo apt-get install lynx
sudo apt-file update
sudo cpan -i IO::Socket
sudo cpan -i CGI
#  sudo cpan -i Captcha::reCAPTCHA						## No longer needed since Google broke their reCAPTCHA
sudo apt-get install libcgi-application-plugin-captcha-perl		## This displaces the reCAPTCHA above

sudo apt-get install libapache2-mod-wsgi			## wsgi and xsendfile are needed for mediadrop (through 20.04)
sudo apt-get install libapache2-mod-wsgi-py3		## wsgi and xsendfile are needed for mediadrop (22.04+)
sudo apt-get install libapache2-mod-xsendfile


sudo apt-get install novnc								## useful for future migration, but not presently needed since we have self-encapsulated noVNC
sudo apt install xfce4 xfce4-goodies tightvncserver		## needed for VNC (but not for noVNC setup)

NOTE: If you manually launch KingJamesPureBibleSearch as VNC QWS canvas as a user other than 'pbsuser01', make certain to delete '/tmp/qtembedded-0/' or the noVNC server will fail to launch!!!  Same applies for other user entries!


Apache Config Files needing updates:
------------------------------------
/etc/apache2/apache2.conf
/etc/apache2/conf-available/security.conf
/etc/apache2/conf-available/serve-cgi-bin.conf
/etc/apache2/sites-available/000-default.conf
/etc/apache2/sites-available/default-ssl.conf
/etc/apache2/sites-available/webchannel.conf


Apache setup:
-------------
sudo a2enmod headers
sudo a2enmod include
sudo a2enmod rewrite
sudo a2enmod cgid
sudo a2enmod wsgi					## wsgi and xsendfile are needed for mediadrop
sudo a2enmod xsendfile
sudo a2ensite webchannel


Checking Apache2 Modules:
-------------------------
$ apache2ctl -M
Loaded Modules:
 core_module (static)
 so_module (static)
 watchdog_module (static)
 http_module (static)
 log_config_module (static)
 logio_module (static)
 version_module (static)
 unixd_module (static)
 access_compat_module (shared)
 alias_module (shared)
 auth_basic_module (shared)
 authn_core_module (shared)
 authn_file_module (shared)
 authz_core_module (shared)
 authz_host_module (shared)
 authz_user_module (shared)
 autoindex_module (shared)
 cgid_module (shared)
 deflate_module (shared)
 dir_module (shared)
 env_module (shared)
 filter_module (shared)
 headers_module (shared)
 include_module (shared)
 mime_module (shared)
 mpm_event_module (shared)
 negotiation_module (shared)
 reqtimeout_module (shared)
 rewrite_module (shared)
 setenvif_module (shared)
 status_module (shared)
 wsgi_module (shared)
 xsendfile_module (shared)


Special User Creation:
----------------------
sudo useradd -r -U -s /bin/false kjpbs
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser01
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser02
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser03
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser04
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser05
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser06
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser07
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser08
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser09
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser10
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser11
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser12
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser13
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser14
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser15
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser16
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser17
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser18
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser19
sudo useradd -r -U -s /bin/false -G kjpbs pbsuser20


Setting up sudoers for KJPBS VNC:
---------------------------------
Files:
/etc/sudoers                                   (edit)
/etc/sudoers.d/91-kjpbs-init-users             (new file)


Use: sudo visudo


/etc/sudoers:
-------------
Add:
=== BEGIN ===
Defaults	editor=/usr/bin/joe
=== END ===


/etc/sudoers.d/91-kjpbs-init-users:
-----------------------------------
=== BEGIN ===


%kjpbs ALL=(%kjpbs) NOPASSWD: ALL
%www-data ALL=(%kjpbs) NOPASSWD: ALL


=== END ====

$ sudo chmod 440 /etc/sudoers.d/91-kjpbs-init-users

(or copy from ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/vnc/sudoers.d/)


Setup for www server root:
--------------------------
/var/www$ ls

drwxr-xr-x  2 root root 4096 Sep  3 18:55 admin
drwxr-xr-x  3 root root 4096 Jan  8  2015 cgi-bin
drwxr-xr-x  3 root root 4096 Feb 25  2014 data
drwxr-xr-x  3 root root 4096 Sep 21 20:29 html
drwxr-xr-x  3 root root 4096 Feb 23  2014 KingJamesPureBibleSearch
lrwxrwxrwx  1 root root   81 Sep 21 20:41 noVNC -> /home/ubuntu/Documents/programs/Bible/KingJamesPureBibleSearch/programs/vnc/noVNC
drwxr-xr-x  3 root root 4096 Sep  3 19:33 webchannel


/var/www$ ls admin/
total 12
drwxr-xr-x 2 root root 4096 Sep  3 18:55 .
drwxr-xr-x 9 root root 4096 Sep 21 08:52 ..
-rw-r--r-- 1 root root   47 Sep  3 18:55 htpasswd.webchannel-admin


/var/www$ ls cgi-bin/
total 28
drwxr-xr-x 3 root root 4096 Jan  8  2015 .
drwxr-xr-x 9 root root 4096 Sep 21 08:52 ..
-rwxr-xr-x  1 root root 1897 May 19 17:07 kjpbs_captcha_check.pl*
-rwxr-xr-x  1 root root   88 May 19 16:45 kjpbs_captcha.pl*
-rw-r--r--  1 root root  716 May 19 16:45 kjpbs_captcha.pm
-rw-r--r--  1 root root 3824 Feb 25  2014 kjpbs_nodes.pl
-rwxr-xr-x  1 root root  964 Feb 25  2014 kjpbs_status.pl*
drwxr-xr-x  2 root root 4096 Sep 26  2014 testing/


/var/www$ ls cgi-bin/testing/
total 48
drwxr-xr-x 2 root root 4096 Sep 26  2014 .
drwxr-xr-x 3 root root 4096 Jan  8  2015 ..
-rw-r--r-- 1 root root 3824 Sep 26  2014 kjpbs_nodes.pl
-rw-r--r-- 1 root root 3829 Feb 26  2014 kjpbs_nodes_test.pl
-rwxr-xr-x 1 root root  762 Feb 24  2014 launch_kjpbs.pl
-rwxr-xr-x 1 root root  602 Feb 23  2014 status.pl
-rwxr-xr-x 1 root root  767 Feb 26  2014 testit.pl
-rwxr-xr-x 1 root root 2534 Feb 23  2014 test.pl


/var/www$ ls data/
total 12
drwxr-xr-x 3 root     root     4096 Feb 25  2014 .
drwxr-xr-x 9 root     root     4096 Sep 21 08:52 ..
drwxrwxr-x 2 www-data www-data 4096 Feb 25  2014 kjpbs


/var/www$ ls data/kjpbs/
total 12
drwxrwxr-x 2 www-data www-data 4096 Feb 25  2014 .
drwxr-xr-x 3 root     root     4096 Feb 25  2014 ..
-rw-rw-r-- 1 www-data www-data   25 Feb 25  2014 server_full.txt

( NOTE : Important to make server_full.txt writable by www-data !! )


/var/www$ ls html/
total 144
drwxr-xr-x 3 root root  4096 Sep 21 20:29 .
drwxr-xr-x 8 root root  4096 Sep 21 20:41 ..
drwxr-xr-x  2 root root  4096 Mar 19  2016 92836656-db29-4b90-bbab-07d098983e70/
-rw-r--r--  1 root root  1150 Sep 21  2015 favicon.ico
-rw-r--r--  1 root root  3022 Sep 21  2015 index_down.html
-rw-r--r--  1 root root 10730 May 19 16:33 index.html
-rwxr-xr-x  1 root root  8598 Sep 21  2015 index_orig.html*
-rw-r--r--  1 root root 97410 Sep 21  2015 KJPBS_Laptop.png
-rw-r--r--  1 root root   466 Sep 21  2015 redirect.html
drwxr-xr-x  2 root root  4096 Sep 21  2015 status/


/var/www$ ls html/status/
total 12
drwxr-xr-x 2 root root 4096 Sep 21 08:00 .
drwxr-xr-x 3 root root 4096 Sep 21 20:29 ..
-rwxr-xr-x 1 root root 2002 Sep 21 08:00 index.html

( NOTE : Important to make index.html executable for #include of /cgi-bin/kjpbs_status.pl !! )



/var/www$ ls KingJamesPureBibleSearch/
total 12
drwxr-xr-x 3 root root 4096 Feb 23  2014 .
drwxr-xr-x 9 root root 4096 Sep 21 08:52 ..
drwxr-xr-x 3 root root 4096 Sep 21 20:26 KJVCanOpener

/var/www$ ls KingJamesPureBibleSearch/KJVCanOpener/
total 28
drwxr-xr-x 3 root root 4096 Sep 21 20:26 .
drwxr-xr-x 3 root root 4096 Feb 23  2014 ..
drwxr-xr-x 2 root root 4096 Jan  8  2015 app
lrwxrwxrwx 1 root root   87 Sep 21 20:24 db -> /home/ubuntu/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/db
lrwxrwxrwx 1 root root   88 Sep 21 20:25 doc -> /home/ubuntu/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/doc
lrwxrwxrwx 1 root root   90 Sep 21 20:26 fonts -> /home/ubuntu/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/fonts
drwxr-xr-x 2 root root 4096 Jul 14 19:00 translations/

/var/www$ ls KingJamesPureBibleSearch/KJVCanOpener/app/
total 6108
drwxr-xr-x 2 root  root     4096 Jan  8  2015 .
drwxr-xr-x 3 root  root     4096 Sep 21 20:26 ..
-rwxr-sr-x 1 kjpbs kjpbs 6245526 Sep 21 20:23 KingJamesPureBibleSearch

( NOTE : Important for set user sticky bit on KingJamesPureBibleSearch executable !! )

/var/www$ ls KingJamesPureBibleSearch/KJVCanOpener/translations/
total 1592
drwxr-xr-x 2 root root   4096 Jul 14 19:01 ./
drwxr-xr-x 4 root root   4096 Jul 14 19:00 ../
-rw-r--r-- 1 root root 149936 Jul 14 19:01 kjpbs.de.qm
-rw-r--r-- 1 root root 164396 Jul 14 19:01 kjpbs.en.qm
-rw-r--r-- 1 root root 158684 Jul 14 19:01 kjpbs.es.qm
-rw-r--r-- 1 root root 159600 Jul 14 19:01 kjpbs.fr.qm
-rw-r--r-- 1 root root   2721 Jul 14 19:01 kjpbs.ru.qm
-rw-r--r-- 1 root root 325046 Jul 14 19:01 qt_de.qm
-rw-r--r-- 1 root root  82411 Jul 14 19:01 qt_es.qm
-rw-r--r-- 1 root root 255133 Jul 14 19:01 qt_fr.qm
-rw-r--r-- 1 root root 288364 Jul 14 19:01 qt_ru.qm
-rw-r--r-- 1 root root   1764 Jul 14 19:01 wwwidgets_de.qm
-rw-r--r-- 1 root root   1588 Jul 14 19:01 wwwidgets_en.qm
-rw-r--r-- 1 root root   1728 Jul 14 19:01 wwwidgets_es.qm
-rw-r--r-- 1 root root   1740 Jul 14 19:01 wwwidgets_fr.qm


/var/www$ ls webchannel/
total 12
drwxr-xr-x 3 root root 4096 Sep  3 19:33 .
drwxr-xr-x 8 root root 4096 Sep 21 20:41 ..
drwxr-xr-x 5 root root 4096 Sep 20 04:28 html

/var/www$ ls webchannel/html/
total 692
drwxr-xr-x 5 root root   4096 Sep 20 04:28 .
drwxr-xr-x 3 root root   4096 Sep  3 19:33 ..
drwxr-xr-x 2 root root   4096 Sep 15 17:03 admin
-rw-r--r-- 1 root root    753 Sep 21 09:08 Close.png
-rw-r--r-- 1 root root   4206 Sep 21 09:08 detail.png
-rw-r--r-- 1 root root  12635 Sep 21 09:08 edit_clear.png
-rw-r--r-- 1 root root    404 Sep 21 09:08 error.html
-rw-r--r-- 1 root root   1150 Sep 18 19:56 favicon.ico
-rw-r--r-- 1 root root    212 Sep 14 22:15 .htaccess
-rw-r--r-- 1 root root  62962 Sep 21 09:08 index.html
drwxr-xr-x 3 root root   4096 Sep 14 22:14 jquery
-rw-r--r-- 1 root root  34588 Sep 21 09:08 KJPBS_Splash_20130405_194312_320.jpeg
-rw-r--r-- 1 root root  93843 Sep 21 09:08 KJPBS_Splash_20130405_194312_320.png
-rw-r--r-- 1 root root  40583 Sep 21 09:08 KJPBS_Splash_20130405_194312_360.jpeg
-rw-r--r-- 1 root root 115479 Sep 21 09:08 KJPBS_Splash_20130405_194312_360.png
-rw-r--r-- 1 root root 106152 Sep 21 09:08 KJPBS_Splash_20130405_194312.jpeg
-rw-r--r-- 1 root root 156973 Sep 20 00:32 pinned-scroll.png
-rw-r--r-- 1 root root  14808 Sep 21 09:08 qwebchannel.js
-rw-r--r-- 1 root root     27 Sep 21 09:08 robots.txt
drwxr-xr-x 4 root root   4096 Sep 14 20:35 testing
lrwxrwxrwx 1 root root     43 Sep 18 19:31 webchannel_locations.kml -> /home/ubuntu/webchannel/stats/locations.kml
-rw-r--r-- 1 root root   1063 Sep 20 04:28 webchannel_map.html


-------------------------------------------------------------------------------

--------------------------------------
Setting up vnc and webchannel scripts:
--------------------------------------

Build genkml:
-------------
cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel
mkdir -p build-genkml-Qt_5_5_0_gcc_64/Release
cd build-genkml-Qt_5_5_0_gcc_64/Release
~/Qt/5.5.0-vnc-run/bin/qmake CONFIG+=release ../../genkml/genkml.pro
make
cd ~/bin
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/build-genkml-Qt_5_5_0_gcc_64/Release/genkml genkml


webchannel/bin:
---------------
cd ~/bin

ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/bin/check-kjpbs check-kjpbs
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/bin/check-spot check-spot
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/bin/webchannel webchannel
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/bin/webchannel-geolocate webchannel-geolocate
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/bin/webchannel-geolocate-errors webchannel-geolocate-errors
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/bin/webchannel-ipdump webchannel-ipdump
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/bin/webchannel-maxconn webchannel-maxconn
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/bin/webchannel-unique webchannel-unique
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/bin/webchannel-update-stats webchannel-update-stats
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/webchannel/bin/webchannel-useragent webchannel-useragent

cd /usr/local
sudo rmdir bin
sudo ln -s ~/bin bin


AWS CloudWatch Scripts:
-----------------------
sudo apt-get install libwww-perl libdatetime-perl   (included in general install list above)
cd ~/bin
wget http://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip
unzip CloudWatchMonitoringScripts-1.2.1.zip
rm CloudWatchMonitoringScripts-1.2.1.zip

Create ~/bin/aws-scripts-mon/awscreds.vncserver with AWS credentials


AWS Command Line Interface:
---------------------------
https://github.com/aws/aws-cli

curl -O https://bootstrap.pypa.io/get-pip.py
sudo python get-pip.py
sudo pip install awscli
    --OR--
sudo pip install --upgrade awscli

Verify with:
aws --version

Configure:
aws configure

AWS Access Key ID [None]: xxxxxxxxxxxxxx
AWS Secret Access Key [None]: xxxxxxxxxxxxxxxx
Default region name [None]: us-east-1
Default output format [None]: text


Setup webchannel:
-----------------
mkdir ~/webchannel
mkdir ~/webchannel/logs
mkdir ~/webchannel/stats
mkdir -p ~/webchannel/KJVCanOpener/app
(compile KJPBS for webchannel)
cp ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/build-KJVCanOpener-Qt_5_5_0_gcc_64/Release/KingJamesPureBibleSearch ~/webchannel/KJVCanOpener/app/
cd ~/webchannel/KJVCanOpener
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/db db
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/doc doc
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/fonts fonts
ln -s ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/translations translations
mkdir geoip
cp ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/KJVCanOpener/geoip/* geoip/

edit ~/webchannel/KJVCanOpener/geoip/GeoIP.conf and set API keys


Setting up crontab:
-------------------
crontab -e


*/5 * * * * /home/ubuntu/bin/aws-scripts-mon/mon-put-instance-data.pl --mem-used --mem-avail --mem-util --swap-util --swap-used --aws-credential-file=/home/ubuntu/bin/aws-scripts-mon/awscreds.vncserver --from-cron
0 * * * * /home/ubuntu/bin/webchannel-update-stats
*/10 * * * * /home/ubuntu/bin/check-kjpbs
*/1 * * * * /home/ubuntu/bin/check-spot
*/5 * * * * /home/ubuntu/bin/sermonstream 666
32 10 * * 6 /usr/bin/geoipupdate -f /home/ubuntu/webchannel/KJVCanOpener/geoip/GeoIP.conf -d /home/ubuntu/webchannel/KJVCanOpener/geoip

Note: check-kjpbs will automatically launch webchannel!


--------------------------------------------------------------------------------

MediaDrop Bionic to Focal Porting Notes:
----------------------------------------
1) After upgrading from Bionic to Focal, MySQL will fail to startup correctly,
which seemingly has something to do with the older format data and mixed installs
from the past.  Plus, MediaDrop uses an ancient SQLAlchemy which doesn't work with
MySQL 8.0 on Focal anyway.  Therefore, it's necessary to first export all data
from MySQL on the old system via:

mysqldump -u root --password=rootpassword --all-databases > mediadrop.sql

2) After Focal upgrade, remove and flush MySQL:

sudo apt-get purge mysql-server mysql-client mysql-common mysql-community-client mysql-community-server libmysqlclient-dev
sudo apt-get autoclean && sudo apt-get clean && sudo apt-get update
(delete the old MySQL data too)

3) Install MySQL 5.7 on Focal:

wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb

sudo dpkg -i mysql-apt-config_0.8.12-1_all.deb

Note: This will walk you through selecting MySQL version.  Select "bionic"
for the system.  And enter the first option of server/client and change the
version from 8.0 to 5.7.  Then select "OK" -> OK.

Add missing gpg key:

sudo apt-key adv --keyserver pgp.mit.edu --recv-keys 3A79BD29

sudo apt-get update
sudo apt install  mysql-client=5.7* mysql-server=5.7* libmysqlclient-dev=5.7*

4) Import old data:

mysql -u root -prootpassword < mediadrop.sql

5) Fix mediadrop_user permissions:

mysql -u root -p
mysql> flush privileges;
mysql> grant usage on mediadrop_db.* to mediadrop_user@localhost identified by 'mysecretpassword';
mysql> grant all privileges on mediadrop_db.* to mediadrop_user@localhost;
mysql> exit;

6) Create a new venv:

sudo -i
cd /var/www/mediadrop
mv venv venv_OLD_bionic
virtualenv --python=/usr/bin/python2.7 venv
source venv/bin/activate
cd mediadrop-git
-- Edit setup.cfg and comment out the "allow_hosts" line and then run:
python setup.py develop
cd ..
chmod -R a+r venv
-- (Not sure if the following command is needed or not.  I did and it worked, but?)
paster setup-app deployment.ini
service apache2 reload

7) Create an apt preferences file to pin these versions:

sudo joe /etc/apt/preferences.d/mysql.5.7.pref

With this content:
-----
Package: libmysqlclient-dev
Pin: version 5.7*
Pin-Priority: 550

Package: mysql-client
Pin: version 5.7*
Pin-Priority: 550

Package: mysql-server
Pin: version 5.7*
Pin-Priority: 550
-----


--------------------------------------------------------------------------------

Setting up MediaDrop
--------------------
sudo apt-get install mysql-server mysql-client
edit /etc/mysql/my.cnf and add the following in [mysqld] before "Basic Settings":		<<<< ???? lost in 16.04 or 18.04 ????
sudo service mysql restart
sudo mysql_secure_installation
	-- Remove anonymous access
	-- Disallow remote root
	-- Remove test database
	-- Reload privileges

sudo apt-get install libjpeg-dev zlib1g-dev libfreetype6-dev libmysqlclient-dev python-dev
sudo apt-get install python-setuptools python-virtualenv
sudo apt-get install git
sudo -i
cd /usr/include
ln -s freetype2 freetype
cd /var/www
mkdir mediadrop
cd mediadrop
-------------
--- Bionic:
virtualenv --distribute --no-site-packages venv
--- Focal:  (Note: On Focal the arguments have changed)
virtualenv --python=/usr/bin/python2.7 venv
-------------
source venv/bin/activate
git clone ssh://git-codecommit.us-east-1.amazonaws.com/v1/repos/mediadrop mediadrop-git
cd mediadrop-git
git remote add github git@github.com:dewhisna/mediadrop.git
-------------
--- Bionic:
python setup.py develop --allow-hosts=static.mediadrop.video,static.mediadrop.net,*.pypi.org,pypi.org,*.pythonhosted.org
--- Focal:
-- Edit setup.cfg and comment out the "allow_hosts" line and run with:
python setup.py develop
-------------
cd ..
paster make-config MediaDrop deployment.ini
-- NOTE: For MediaDrop 0.10.3 the above should be MediaCore
chown -R www-data:www-data data/
mysql -u root -p
mysql> create database mediadrop_db;
mysql> grant usage on mediadrop_db.* to mediadrop_user@localhost identified by 'mysecretpassword';
mysql> grant all privileges on mediadrop_db.* to mediadrop_user@localhost;
mysql> exit;
joe deployment.ini
Set:
	email_to = you@yourdomain.com
	host = 0.0.0.0
	port = 8080
	sqlalchemy.url = mysql://mediadrop_user:mysecretpassword@localhost/mediadrop_db?charset=utf8&use_unicode=0
paster setup-app deployment.ini
chown -R www-data:www-data data/
mysql -u root -p mediadrop_db < setup_triggers.sql


Launch with built-in server:
paster serve --reload deployment.ini

UGH!!!

For built-in server, generate mediadrop-start.sh from:
=== BEGIN ===
#!/bin/bash
cd /
source venv/bin/activate
cd mediadrop-git
paster serve --reload deployment.ini
=== END ===

chmod +x mediadrop-start.sh
sudo ./mediadrop-start.sh

NOTE:  Use "--daemon" instead of "--reload" above to launch as daemon


Hooking MediaDrop into Apache and including Adminer for database maintenance:
-----------------------------------------------------------------------------
sudo apt-get install libapache2-mod-wsgi
sudo a2enmod wsgi
sudo apt-get install libapache2-mod-xsendfile
sudo a2enmod xsendfile
sudo apt-get install adminer
-- EDIT: apache.conf in /etc/adminer/ (use repository settings)
cd /etc/apache2
sudo mkdir conf.d
cd conf.d/
sudo ln -s ../../adminer/apache.conf adminer.conf
cd ../conf-enabled/
sudo ln -s ../conf.d/adminer.conf adminer.conf

-- Already have created deployment.ini (above)
-- Deploying to: http://site.example/my_media/
cd /var/www/mediadrop
mkdir html
mkdir mod_wsgi
cp /var/www/mediadrop/mediadrop-git/deployment-scripts/mod_wsgi/mediadrop.wsgi mod_wsgi/
-- NOTE: called mediacore.wsgi on MediaDrop versions prior to 0.11
cp /var/www/mediadrop/mediadrop-git/mediacore/public/crossdomain.xml .      (or copy edit version from repositories)
-- Edit mediadrop.wsgi:
	deployment_config = '/var/www/mediadrop/deployment.ini'
	temp_dir = '/var/www/mediadrop/data/tmp'
-- Edit httpd.conf (or virtual host mediadrop.conf) replace "my_media" with desired folder alias:
	# You can tweak the WSGIDaemonProcess directive for performance, but this
	# will work for now.
	# Relevant doc pages:
	#     http://code.google.com/p/modwsgi/wiki/ProcessesAndThreading
	#     http://code.google.com/p/modwsgi/wiki/ConfigurationDirectives#WSGIDaemonProcess
	# Hint: pay attention to issues surrounding worker-mpm and prefork-mpm.

	# For best performance the number of processes should equal the number of CPU 
	# cores (but please note that each process may use about 500 MB RAM).
	WSGIDaemonProcess mcore \
	    processes=2 \
	    threads=1 \
	    display-name=%{GROUP} \
	    python-path=/var/www/mediadrop/venv/lib/python2.7/site-packages \
	    python-eggs=/var/www/mediadrop/data/python-egg-cache

	WSGIProcessGroup mcore

	# Intercept all requests to /media/* and pass them to mediadrop.wsgi
	WSGIScriptAlias /media /var/www/mediadrop/mod_wsgi/mediacore.wsgi

	# Create an exception for media and podcast image from your data directory
	AliasMatch ^/media/images/(media|podcasts)(.*) /var/www/mediadrop/data/images/$1$2

	# Create an exception for all static MediaDrop content
	AliasMatch ^/media/(admin/)?(images|scripts|styles)(.*) /var/www/mediadrop/mediadrop-git/mediacore/public/$1$2$3

	# Create an exception for your custom appearance css and images
	Alias /media/appearance /var/www/mediadrop/data/appearance

	# Crossdomain
	Alias /crossdomain.xml /var/www/mediadrop/crossdomain.xml

	<Location /media>
		Require all granted
		Order allow,deny
		allow from all
	</Location>

	# Make the main mediadrop site content available:
	<Directory /var/www/mediadrop/html/>
		Options Includes FollowSymLinks
		AllowOverride All
		Require all granted
		Order allow,deny
		allow from all
	</Directory>


	# Make the wsgi script accessible
	<Directory /var/www/mediadrop/mod_wsgi/>
		Options All
		AllowOverride All
		Require all granted
		Order allow,deny
		Allow from all
	</Directory>

	# Make the data accessible
	<Directory /var/www/mediadrop/data/>
		AllowOverride All
		Require all granted
		Order allow,deny
		Allow from all
	</Directory>

	# Make all the static content accessible
	<Directory /var/www/mediadrop/mediadrop-git/mediacore/public/*>
		AllowOverride All
		Require all granted
		Order allow,deny
		Allow from all
		Options -Indexes
	</Directory>



-- Possible Speedups:
	1) Edit /var/www/mediadrop/deployment.ini and set:
		static_files = false
	2) Enable xsendfile:  sudo a2enmod xsendfile
	   Edit /var/www/mediadrop/deployment.ini and set:
		files_serve_method = apache_xsendfile

-- If making ANY changes to MediaDrop, make Apache aware by:
	touch /var/www/mediadrop/mediadrop.wsgi		(or mediacore.wsgi on older versions)


MediaDrop Development Server
----------------------------
sudo -i
cd /var/www/mediadrop
virtualenv --distribute --no-site-packages venv_dev
source venv_dev/bin/activate
git clone ssh://git-codecommit.us-east-1.amazonaws.com/v1/repos/mediadrop mediadrop-dev
cd mediadrop-dev
git remote add github git@github.com:dewhisna/mediadrop.git
python setup.py develop
cp /var/www/mediadrop/mod_wsgi/mediacore.wsgi /var/www/mediadrop/mod_wsgi/mediacore_dev.wsgi  (or mediadrop.wsgi on newer)
-- Edit mediacore_dev.wsgi for new paths
cp /etc/apache2/sites-available/mediadrop.conf /etc/apache2/sites-available/mediadropdev.conf
-- Edit mediadropdev.conf (Note wsgi daemon name must be unique)


Headless Transmission setup
---------------------------
sudo apt-get install transmission-cli transmission-common transmission-daemon
sudo service transmission-daemon stop
Find the settings usually (/etc/transmission-daemon/settings.json or /var/lib/transmission-daemon/info/settings.json):
	sudo find / -iname settings.json
sudo joe /etc/transmission-daemon/settings.json
Set:
	"download-dir": "your-download-location",
	"incomplete-dir": "your-download-location",
	"rpc-password": "password",
	"rpc-username": "username",
	"rpc-whitelist": "127.0.0.1,192.168.0.*",
sudo service transmission-daemon start


Build ffmpeg engine:
--------------------
sudo apt-get install python-magic                        (needed for s3cmd sync when uploading resulting mpegs)
sudo add-apt-repository ppa:nilarimogard/webupd8         (needed for youtube-dl) (currently no builds for 22.04)
sudo apt-get update
sudo apt-get install youtube-dl
sudo apt-get install mediainfo
sudo joe /etc/apt/sources.list
	-- Uncomment following:
		(14.04 Trusty):
			# deb http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ trusty multiverse
			# deb-src http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ trusty multiverse
			# deb http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ trusty-updates multiverse
			# deb-src http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ trusty-updates multiverse
			----
			# deb http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse
			# deb-src http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse
			----
			# deb http://archive.canonical.com/ubuntu trusty partner
			# deb-src http://archive.canonical.com/ubuntu trusty partner
			----
			# deb http://security.ubuntu.com/ubuntu trusty-security multiverse
			# deb-src http://security.ubuntu.com/ubuntu trusty-security multiverse
			----
		(16.04 Xenial):
			# deb http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ xenial multiverse
			# deb-src http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ xenial multiverse
			# deb http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ xenial-updates multiverse
			# deb-src http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ xenial-updates multiverse
			----
			# deb http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse
			# deb-src http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse
			----
			# deb http://security.ubuntu.com/ubuntu xenial-security main restricted multiverse
			# deb-src http://security.ubuntu.com/ubuntu xenial-security main
			# deb http://security.ubuntu.com/ubuntu xenial-security universe
			# deb-src http://security.ubuntu.com/ubuntu xenial-security universe
			----
		(16.04 Xenial):
			# Just uncomment all deb-src lines! -- this was already needed in the ec2 "sudo apt-get build-dep qt4-x11"
			----
--------------------
sudo apt-get update
sudo apt-file update
sudo apt-get install ubuntu-restricted-extras
sudo apt-get update
--------------------  >>> ffmpeg build:
sudo apt-get -y --force-yes install autoconf automake build-essential libass-dev libfreetype6-dev \
  libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev \
  libxcb-xfixes0-dev pkg-config texi2html zlib1g-dev
mkdir ~/ffmpeg_sources
-----
sudo apt-get install yasm
sudo apt-get install nasm
----- libx264:
sudo apt-get install libx264-dev
----- libx265:
sudo apt-get install cmake mercurial			## <<< mercurial no longer needed for multicoreware/x265
cd ~/ffmpeg_sources
## hg clone https://bitbucket.org/multicoreware/x265	## <<< moved from mercurial to git
git clone https://bitbucket.org/multicoreware/x265_git.git
cd ~/ffmpeg_sources/x265_git/build/linux
PATH="$HOME/bin:$PATH" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$HOME/ffmpeg_build" -DENABLE_SHARED:bool=off ../../source
make
make install
make clean
----- libfdk-aac:
sudo apt-get install libfdk-aac0 libfdk-aac-dev		## <<< This is on Ubuntu 14.04 and 16.04 only
sudo apt-get install libfdk-aac1 libfdk-aac-dev		## <<< This is new package on Ubuntu 18.04 and 20.04
sudo apt-get install libfdk-aac2 libfdk-aac-dev		## <<< This is new package on Ubuntu 22.04
----- libmp3lame:
sudo apt-get install libmp3lame0 libmp3lame-dev
----- libopus:
sudo apt-get install libopus0 libopus-dev
----- libvpx:
sudo apt-get install libvpx1 libvpx-dev		## <<< This is on Ubuntu 14.04 only
sudo apt-get install libvpx3 libvpx-dev		## <<< This is new package on Ubuntu 16.04
sudo apt-get install libvpx5 libvpx-dev		## <<< This is new package on Ubuntu 18.04
sudo apt-get install libvpx6 libvpx-dev		## <<< This is new package on Ubuntu 20.04
sudo apt-get install libvpx7 libvpx-dev		## <<< This is new package on Ubuntu 22.04
----- ffmpeg:
cd ~/ffmpeg_sources
wget http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2
tar xjvf ffmpeg-snapshot.tar.bz2
cd ffmpeg
PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \
  --prefix="$HOME/ffmpeg_build" \
  --pkg-config-flags="--static" \
  --extra-libs=-lpthread \
  --extra-cflags="-I$HOME/ffmpeg_build/include" \
  --extra-ldflags="-L$HOME/ffmpeg_build/lib" \
  --bindir="$HOME/bin" \
  --enable-gpl \
  --enable-libass \
  --enable-libfdk-aac \
  --enable-libfreetype \
  --enable-libmp3lame \
  --enable-libopus \
  --enable-libtheora \
  --enable-libvorbis \
  --enable-libvpx \
  --enable-libx264 \
  --enable-libx265 \
  --enable-nonfree \
  --enable-openssl
PATH="$HOME/bin:$PATH" make
make install
make distclean
hash -r

---------------------------

Install s3cmd:
--------------
cd ~/Downloads/software/aws
mkdir s3cmd
cd s3cmd
	Download or copy: s3cmd-1.5.0-beta1.tar.gz
	tar -zxvf s3cmd-1.5.0-beta1.tar.gz
	cd s3cmd-1.5.0-beta1
or
	git clone git@github.com:s3tools/s3cmd.git
	cd s3cmd
sudo python setup.py install
s3cmd --configure
sudo apt-get install python-magic


===== ALTERNATIVE (upgrade): =====
(Note some new versions fail if installed in default '/usr/local/bin'.  Solution
is to install at '/usr/bin' with the following.  Also make sure python 2.7 is
installed and is the default):

sudo apt-get install python-pip			<< Must be done first (independently of sudo python get-pip.py)!

cd ~/Downloads/software/aws
git clone git@github.com:s3tools/s3cmd.git
cd s3cmd
git checkout v1.6.0		<< Or other version
sudo pip uninstall s3cmd
sudo pip install .
s3cmd --version
  >>> If problems with "ImportError: No module named ExitCodes" use:
  cd s3cmd
  sudo pip install --install-option="--install-scripts=/usr/bin" .
  >>> May need to start new shell!


--------------------------

cd ~/Documents/programs/Bible
git clone git@github.com:bentasker/HLS-Stream-Creator.git
cd ~/bin
ln -s ~/Documents/programs/Bible/HLS-Stream-Creator/HLS-Stream-Creator.sh HLS-Stream-Creator

---------------------------

sudo apt-get install imagemagick			<< Needed for mediadrop thumbnail generation

---------------------------
---------------------------

Install MaxMindDB for GeoLocate for WebChannel:
--------------------------------
sudo add-apt-repository ppa:maxmind/ppa
sudo apt-get update
sudo apt-get install libmaxminddb0 libmaxminddb-dev mmdb-bin geoipupdate

edit ~/webchannel/KJVCanOpener/geoip/GeoIP.conf and set API keys

crontab -e
  ADD:
  ------------
    # top of crontab
    MAILTO=your@email.com

    32 10 * * 6 /usr/bin/geoipupdate -f /home/ubuntu/webchannel/KJVCanOpener/geoip/GeoIP.conf -d /home/ubuntu/webchannel/KJVCanOpener/geoip
    # end of crontab


-----------------------
Setting up LetsEncrypt:
-----------------------
(Proxy stuff needed for WebChannel reverse proxy for secure connection)
sudo a2enmod proxy
sudo a2enmod proxy_http
sudo a2enmod proxy_wstunnel
sudo a2enmod remoteip

sudo add-apt-repository ppa:certbot/certbot
sudo apt-get update
sudo apt-get install certbot python3-certbot-apache

Edit the /etc/apache2/sites-available files for mediadrop.conf and mediadropdev.conf
and comment out the WSGI entries completely (for example):

#	WSGIDaemonProcess mcore \
#	   processes=2 \
#	   threads=1 \
#	   display-name=%{GROUP} \
#	   python-home=/var/www/mediadrop/venv \
#	   python-path=/var/www/mediadrop/venv/lib/python2.7/site-packages \
#	   python-eggs=/var/www/mediadrop/data/python-egg-cache
#
#	WSGIProcessGroup mcore
#
#	# Intercept all requests to /media/* and pass them to mediadrop.wsgi
#	WSGIScriptAlias /media /var/www/mediadrop/mod_wsgi/mediadrop.wsgi

Then, run:
sudo certbot --apache

After configuration, reedit the above files and uncomment them completely
in the newly generated *-le-ssl.conf files, but only uncomment the last
two entries in the mediadrop.conf/mediadropdev.conf non-ssl version (example):

	WSGIProcessGroup mcore

	# Intercept all requests to /media/* and pass them to mediadrop.wsgi
	WSGIScriptAlias /media /var/www/mediadrop/mod_wsgi/mediadrop.wsgi

And restart the server:
sudo service apache2 restart


Note: The new webchannel-le-ssl.conf file will need a reverse proxy websocket
tunnel:

	ProxyPreserveHost On
	ProxyPass "/ws/" "ws://localhost:9340/"
	ProxyPassReverse "/ws/" "ws://localhost:9340/"


Note: The new 000-default-le-ssl.conf file will need a reverse proxy websocket
and http tunnel:

	ProxyPreserveHost On

	ProxyPass "/6080/websockify" "ws://localhost:6080/websockify"
	ProxyPassReverse "/6080/websockify" "ws://localhost:6080/websockify"
	ProxyPass "/6080/" "http://localhost:6080/"
	ProxyPassReverse "/6080/" "http://localhost:6080/"

	ProxyPass "/6081/websockify" "ws://localhost:6081/websockify"
	ProxyPassReverse "/6081/websockify" "ws://localhost:6081/websockify"
	ProxyPass "/6081/" "http://localhost:6081/"
	ProxyPassReverse "/6081/" "http://localhost:6081/"

	ProxyPass "/6082/websockify" "ws://localhost:6082/websockify"
	ProxyPassReverse "/6082/websockify" "ws://localhost:6082/websockify"
	ProxyPass "/6082/" "http://localhost:6082/"
	ProxyPassReverse "/6082/" "http://localhost:6082/"

	ProxyPass "/6083/websockify" "ws://localhost:6083/websockify"
	ProxyPassReverse "/6083/websockify" "ws://localhost:6083/websockify"
	ProxyPass "/6083/" "http://localhost:6083/"
	ProxyPassReverse "/6083/" "http://localhost:6083/"

	ProxyPass "/6084/websockify" "ws://localhost:6084/websockify"
	ProxyPassReverse "/6084/websockify" "ws://localhost:6084/websockify"
	ProxyPass "/6084/" "http://localhost:6084/"
	ProxyPassReverse "/6084/" "http://localhost:6084/"

	ProxyPass "/6085/websockify" "ws://localhost:6085/websockify"
	ProxyPassReverse "/6085/websockify" "ws://localhost:6085/websockify"
	ProxyPass "/6085/" "http://localhost:6085/"
	ProxyPassReverse "/6085/" "http://localhost:6085/"

	ProxyPass "/6086/websockify" "ws://localhost:6086/websockify"
	ProxyPassReverse "/6086/websockify" "ws://localhost:6086/websockify"
	ProxyPass "/6086/" "http://localhost:6086/"
	ProxyPassReverse "/6086/" "http://localhost:6086/"

	ProxyPass "/6087/websockify" "ws://localhost:6087/websockify"
	ProxyPassReverse "/6087/websockify" "ws://localhost:6087/websockify"
	ProxyPass "/6087/" "http://localhost:6087/"
	ProxyPassReverse "/6087/" "http://localhost:6087/"

	ProxyPass "/6088/websockify" "ws://localhost:6088/websockify"
	ProxyPassReverse "/6088/websockify" "ws://localhost:6088/websockify"
	ProxyPass "/6088/" "http://localhost:6088/"
	ProxyPassReverse "/6088/" "http://localhost:6088/"

	ProxyPass "/6089/websockify" "ws://localhost:6089/websockify"
	ProxyPassReverse "/6089/websockify" "ws://localhost:6089/websockify"
	ProxyPass "/6089/" "http://localhost:6089/"
	ProxyPassReverse "/6089/" "http://localhost:6089/"

	ProxyPass "/6090/websockify" "ws://localhost:6090/websockify"
	ProxyPassReverse "/6090/websockify" "ws://localhost:6090/websockify"
	ProxyPass "/6090/" "http://localhost:6090/"
	ProxyPassReverse "/6090/" "http://localhost:6090/"

	ProxyPass "/6091/websockify" "ws://localhost:6091/websockify"
	ProxyPassReverse "/6091/websockify" "ws://localhost:6091/websockify"
	ProxyPass "/6091/" "http://localhost:6091/"
	ProxyPassReverse "/6091/" "http://localhost:6091/"

	ProxyPass "/6092/websockify" "ws://localhost:6092/websockify"
	ProxyPassReverse "/6092/websockify" "ws://localhost:6092/websockify"
	ProxyPass "/6092/" "http://localhost:6092/"
	ProxyPassReverse "/6092/" "http://localhost:6092/"

	ProxyPass "/6093/websockify" "ws://localhost:6093/websockify"
	ProxyPassReverse "/6093/websockify" "ws://localhost:6093/websockify"
	ProxyPass "/6093/" "http://localhost:6093/"
	ProxyPassReverse "/6093/" "http://localhost:6093/"

	ProxyPass "/6094/websockify" "ws://localhost:6094/websockify"
	ProxyPassReverse "/6094/websockify" "ws://localhost:6094/websockify"
	ProxyPass "/6094/" "http://localhost:6094/"
	ProxyPassReverse "/6094/" "http://localhost:6094/"

	ProxyPass "/6095/websockify" "ws://localhost:6095/websockify"
	ProxyPassReverse "/6095/websockify" "ws://localhost:6095/websockify"
	ProxyPass "/6095/" "http://localhost:6095/"
	ProxyPassReverse "/6095/" "http://localhost:6095/"

	ProxyPass "/6096/websockify" "ws://localhost:6096/websockify"
	ProxyPassReverse "/6096/websockify" "ws://localhost:6096/websockify"
	ProxyPass "/6096/" "http://localhost:6096/"
	ProxyPassReverse "/6096/" "http://localhost:6096/"

	ProxyPass "/6097/websockify" "ws://localhost:6097/websockify"
	ProxyPassReverse "/6097/websockify" "ws://localhost:6097/websockify"
	ProxyPass "/6097/" "http://localhost:6097/"
	ProxyPassReverse "/6097/" "http://localhost:6097/"

	ProxyPass "/6098/websockify" "ws://localhost:6098/websockify"
	ProxyPassReverse "/6098/websockify" "ws://localhost:6098/websockify"
	ProxyPass "/6098/" "http://localhost:6098/"
	ProxyPassReverse "/6098/" "http://localhost:6098/"

	ProxyPass "/6099/websockify" "ws://localhost:6099/websockify"
	ProxyPassReverse "/6099/websockify" "ws://localhost:6099/websockify"
	ProxyPass "/6099/" "http://localhost:6099/"
	ProxyPassReverse "/6099/" "http://localhost:6099/"

	ProxyPass "/6100/websockify" "ws://localhost:6100/websockify"
	ProxyPassReverse "/6100/websockify" "ws://localhost:6100/websockify"
	ProxyPass "/6100/" "http://localhost:6100/"
	ProxyPassReverse "/6100/" "http://localhost:6100/"


===============================================================================
===============================================================================

======================
LSB and schroot Setup:
======================

Edit /etc/schroot/schroot.conf.  Add:

-------------------------------------------------------------------------------

[trusty_32dev]
description=Kubuntu 14.04 Trusty 32-Bit Development 
directory=/srv/chroot/trusty32dev 
personality=linux32
root-users=dewhisna
#run-setup-scripts=true
#run-exec-scripts=true
type=directory
users=dewhisna,testuser


[trusty_64dev]  
description=Kubuntu 14.04 Trusty 64-Bit Development  
directory=/srv/chroot/trusty64dev 
#personality=linux64
root-users=dewhisna
#run-setup-scripts=true
#run-exec-scripts=true 
type=directory
users=dewhisna,testuser


[trusty_win32] 
description=Kubuntu 14.04 Trusty 64-Bit Windows Isolation  
directory=/srv/chroot/trustywin32 
#personality=linux64
root-users=dewhisna
#run-setup-scripts=true
#run-exec-scripts=true
type=directory
users=dewhisna,testuser


-------------------------------------------------------------------------------

sudo mkdir -p /srv/chroot/trusty32dev
sudo mkdir -p /srv/chroot/trusty64dev
sudo mkdir -p /srv/chroot/trustywin32
sudo mkdir -p /srv/chroot/trustywin32dev
sudo debootstrap --variant=buildd --arch=i386 trusty /srv/chroot/trusty32dev http://archive.ubuntu.com/ubuntu/
sudo debootstrap --variant=buildd --arch=amd64 trusty /srv/chroot/trusty64dev http://archive.ubuntu.com/ubuntu/
sudo debootstrap --variant=buildd --arch=amd64 trusty /srv/chroot/trustywin32 http://archive.ubuntu.com/ubuntu/
sudo debootstrap --variant=buildd --arch=amd64 trusty /srv/chroot/trustywin32dev http://archive.ubuntu.com/ubuntu/


---- For Each ----

schroot -c trusty_32dev -u root		<<< Update for each

apt-get install ubuntu-minimal
apt-get install nano

Edit (with nano): /etc/apt/sources.list
Add:
deb http://archive.ubuntu.com/ubuntu trusty main
deb-src http://archive.ubuntu.com/ubuntu trusty main
deb http://us.archive.ubuntu.com/ubuntu/ trusty universe
deb-src http://us.archive.ubuntu.com/ubuntu/ trusty universe
deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates universe
deb-src http://us.archive.ubuntu.com/ubuntu/ trusty-updates universe
deb http://archive.canonical.com/ubuntu trusty partner
deb-src http://archive.canonical.com/ubuntu trusty partner
deb http://extras.ubuntu.com/ubuntu trusty main
deb-src http://extras.ubuntu.com/ubuntu trusty main
deb http://us.archive.ubuntu.com/ubuntu/ trusty multiverse
deb-src http://us.archive.ubuntu.com/ubuntu/ trusty multiverse
deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates multiverse
deb-src http://us.archive.ubuntu.com/ubuntu/ trusty-updates multiverse


apt-get update
apt-get install wget
apt-get install joe
apt-get install build-essential
apt-get build-dep libqt4-dev		<<< build-dep not install!  (can't find this??)
apt-get install gperf bison
apt-get install libxcb1 libxcb1-dev libx11-xcb1 libx11-xcb-dev libxcb-keysyms1 libxcb-keysyms1-dev libxcb-image0 libxcb-image0-dev libxcb-shm0 libxcb-shm0-dev libxcb-icccm4 libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxrender-dev libxcb-shape0-dev
apt-get install perl python
apt-get install libfreetype6-dev fontconfig
apt-get install libjpeg-dev
apt-get install zlib1g zlib1g-dev
apt-get install libssl-dev
apt-get install pkg-config
apt-get install patch patchutils
apt-get install p7zip p7zip-full
apt-get install unzip zip
apt-get install apt-file
apt-file update

apt-get install lsb lsb-base lsb-core lsb-release lsb-multimedia lsb-security lsb-printing lsb-cxx lsb-graphics lsb-desktop lsb-invalid-mta
lsb_release -a


For win32:
----------
apt-get install software-properties-common
add-apt-repository ppa:ubuntu-wine/ppa
or add the following to /etc/apt:
	deb http://ppa.launchpad.net/ubuntu-wine/ppa/ubuntu trusty main
	deb-src http://ppa.launchpad.net/ubuntu-wine/ppa/ubuntu trusty main
dpkg --add-architecture i386
apt-get update
apt-get install wine winetricks wine1.6 wine-gecko2.21 wine1.6-amd64 wine1.6-i386 wine-mono0.0.8


For win32dev:
-------------
apt-get install software-properties-common
add-apt-repository ppa:ubuntu-wine/ppa
or add the following to /etc/apt:
	deb http://ppa.launchpad.net/ubuntu-wine/ppa/ubuntu trusty main
	deb-src http://ppa.launchpad.net/ubuntu-wine/ppa/ubuntu trusty main
dpkg --add-architecture i386
apt-get update
apt-get install wine winetricks wine1.7 wine-gecko2.21 wine1.7-amd64 wine1.7-i386 wine-mono0.0.8


For LSB-32:
-----------
Download:
	lsb-sdk-4.1.8-1.ia32.tar.gz
	lsb-app-checker-local-4.1.8-2.ia32.tar.gz
from:
	http://www.linuxfoundation.org/collaborate/workgroups/lsb/download

tar -zxvf lsb-sdk-4.1.8-1.ia32.tar.gz
cd lsb-sdk
./install.sh
cd /opt
tar -zxvf lsb-app-checker-local-4.1.8-2.ia32.tar.gz
chown -R root:root lsb-app-checker/
(or cp -r from temp folder)


For LSB-64:
-----------
Download:
	lsb-sdk-4.1.8-1.x86_64.tar.gz
	lsb-app-checker-local-4.1.8-2.x86_64.tar.gz
from:
	http://www.linuxfoundation.org/collaborate/workgroups/lsb/download

tar -zxvf lsb-sdk-4.1.8-1.x86_64.tar.gz
cd lsb-sdk
./install.sh
cd /opt
tar -zxvf lsb-app-checker-local-4.1.8-2.x86_64.tar.gz
chown -R root:root lsb-app-checker/
(or cp -r from temp folder)


===============================================================================
===============================================================================

================================
WebAssembly/Emscripten (5.14.1):
================================

Warning: Multithreaded doesn't work well at all, as most browsers still don't
support it, including my Firefox.  The QtSql module, though, requires that
Threading be enable.  However, SQLite doesn't actually need multithreading.
So, we will patch the Qt source and disable the requirement and everything
will compile and function correctly.

The following versions of Emscripten are known to work:

- sdk-fastcomp-1.38.27-64bit
- sdk-fastcomp-1.38.30-64bit


Install Emscripten:
-------------------
$ ~/Documents/programs
$ git clone https://github.com/emscripten-core/emsdk.git
$ cd emsdk/
$ ./emsdk install sdk-fastcomp-1.38.30-64bit
$ ./emsdk activate --embedded sdk-fastcomp-1.38.30-64bit

Before doing following compilations, run:

$ source ./emsdk_env.sh
$ em++ --version						((Make sure em++ is in path))


Download/Build Qt for WebAssembly:
----------------------------------
$ cd ~/Qt
$ tar -Jxvf ~/Downloads/software/Qt/5.14.1/qt-everywhere-src-5.14.1.tar.xz
$ mv qt-everywhere-src-5.14.1 5.14.1-wasm
$ cd 5.14.1-wasm/
$ patch -p1 < ~/Documents/programs/Bible/KingJamesPureBibleSearch/patches/Qt/Qt_5_14_1_wasm.patch
$ ./configure -xplatform wasm-emscripten -sql-sqlite -nomake examples -prefix $PWD/qtbase -opensource -confirm-license
$ make -j8 module-qtbase module-qtdeclarative module-qttranslations


Build qtstyleplugin:
--------------------
$ cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/
$ mkdir build-qtstyleplugins-5_14_1_wasm
$ cd build-qtstyleplugins-5_14_1_wasm/
$ ~/Qt/5.14.1-wasm/qtbase/bin/qmake ../qtstyleplugins/qtstyleplugins.pro CONFIG+=emscripten CONFIG+=release CONFIG+=static
$ make -j8
$ make install


Build wwWidgets:
----------------
$ cd ~/Qt
$ mkdir build-wwwidgets4-Qt_5_14_1_wasm
$ cd build-wwwidgets4-Qt_5_14_1_wasm/
$ ~/Qt/5.14.1-wasm/qtbase/bin/qmake ~/Documents/programs/Bible/KingJamesPureBibleSearch/support/wwWidgets/wwwidgets4.pro CONFIG+=emscripten CONFIG+=release CONFIG+=static
$ make -j8
$ make install
$ cp ~/Documents/programs/Bible/KingJamesPureBibleSearch/support/wwWidgets/translations/wwwidgets_*.qm ~/Qt/5.14.1-wasm/qtbase/translations/


Build KJPBS:
------------
$ cd ~/Documents/programs/Bible/KingJamesPureBibleSearch/programs/
$ mkdir -p build-KJVCanOpener-Qt_5_14_1_wasm/Release
$ cd build-KJVCanOpener-Qt_5_14_1_wasm/Release
$ ~/Qt/5.14.1-wasm/qtbase/bin/qmake ../../KJVCanOpener CONFIG+=emscripten CONFIG+=release
$ make -j8


Testing:
--------
$ emrun --browser=firefox KingJamesPureBibleSearch.html



===============================================================================
===============================================================================




